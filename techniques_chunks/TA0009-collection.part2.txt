{"technique_id":"T1213.003","technique_name":"Data from Information Repositories: Code Repositories","description":"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git. Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or Unsecured Credentials contained within software's source code. Having access to software's source code may allow adversaries to develop Exploits, while credentials may provide access to additional resources using Valid Accounts. **Note:** This is distinct from Code Repositories, which focuses on conducting Reconnaissance via public code repositories.","detection":"Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.","procedures":["[G1004] LAPSUS$: LAPSUS$ has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials.","[G1015] Scattered Spider: Scattered Spider enumerates data stored within victim code repositories, such as internal GitHub repositories.","[C0024] SolarWinds Compromise: During the SolarWinds Compromise, APT29 downloaded source code from code repositories.","[G0096] APT41: APT41 cloned victim user Git repositories during intrusions."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1213.004","technique_name":"Data from Information Repositories: Customer Relationship Management Software","description":"Adversaries may leverage Customer Relationship Management (CRM) software to mine valuable information. CRM software is used to assist organizations in tracking and managing customer interactions, as well as storing customer data. Once adversaries gain access to a victim organization, they may mine CRM software for customer data. This may include personally identifiable information (PII) such as full names, emails, phone numbers, and addresses, as well as additional details such as purchase histories and IT support interactions. By collecting this data, an adversary may be able to send personalized Phishing emails, engage in SIM swapping, or otherwise target the organization’s customers in ways that enable financial gain or the compromise of additional organizations. CRM software may be hosted on-premises or in the cloud. Information stored in these solutions may vary based on the specific instance or environment. Examples of CRM software include Microsoft Dynamics 365, Salesforce, Zoho, Zendesk, and HubSpot.","detection":null,"procedures":null,"tactics":"TA0009 - Collection"}
{"technique_id":"T1213.005","technique_name":"Data from Information Repositories: Messaging Applications","description":"Adversaries may leverage chat and messaging applications, such as Microsoft Teams, Google Chat, and Slack, to mine valuable information. The following is a brief list of example information that may hold potential value to an adversary and may also be found on messaging applications: * Testing / development credentials (i.e., Chat Messages) * Source code snippets * Links to network shares and other internal resources * Proprietary data * Discussions about ongoing incident response efforts In addition to exfiltrating data from messaging applications, adversaries may leverage data from chat messages in order to improve their targeting - for example, by learning more about an environment or evading ongoing incident response efforts.","detection":null,"procedures":["[G0117] Fox Kitten: Fox Kitten has accessed victim security and IT environments and Microsoft Teams to mine valuable information.","[G1015] Scattered Spider: Scattered Spider threat actors search the victim’s Slack and Microsoft Teams for conversations about the intrusion and incident response.","[G1004] LAPSUS$: LAPSUS$ has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1530","technique_name":"Data from Cloud Storage","description":"Adversaries may access data from cloud storage. Many IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. In some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the Cloud API. In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., Data from Information Repositories). Adversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem. There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions. This open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records. Adversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.","detection":"Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.","procedures":["[G0117] Fox Kitten: Fox Kitten has obtained files from the victim's cloud storage instances.","[S0683] Peirates: Peirates can dump the contents of AWS S3 buckets. It can also retrieve service account tokens from kOps buckets in Google Cloud Storage or S3.","[G1044] APT42: APT42 has collected data from Microsoft 365 environments.","[G0125] HAFNIUM: HAFNIUM has exfitrated data from OneDrive.","[G1015] Scattered Spider: Scattered Spider enumerates data stored in cloud resources for collection and exfiltration purposes.","[S1091] Pacu: Pacu can enumerate and download files stored in AWS storage services, such as S3 buckets.","[C0027] C0027: During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.","[S0677] AADInternals: AADInternals can collect files from a user’s OneDrive."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1557.001","technique_name":"Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay","description":"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and Responder.","detection":"Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of “0” indicates LLMNR is disabled. Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy. Deploy an LLMNR/NBT-NS spoofing detection tool. Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.","procedures":["[S0357] Impacket: Impacket modules like ntlmrelayx and smbrelayx can be used in conjunction with Network Sniffing and LLMNR/NBT-NS Poisoning and SMB Relay to gather NetNTLM credentials for Brute Force or relay attacks that can gain code execution.","[S0363] Empire: Empire can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.","[S0378] PoshC2: PoshC2 can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.","[G0032] Lazarus Group: Lazarus Group executed Responder using the command [Responder file path] -i [IP address] -rPv on a compromised host to harvest credentials and move laterally.","[G0102] Wizard Spider: Wizard Spider has used the Invoke-Inveigh PowerShell cmdlets, likely for name service poisoning.","[S0192] Pupy: Pupy can sniff plaintext network credentials and use NBNS Spoofing to poison name services.","[S0174] Responder: Responder is used to poison name services to gather hashes and credentials from systems within a local network."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1557.002","technique_name":"Adversary-in-the-Middle: ARP Cache Poisoning","description":"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address. Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache. An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment. The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache. Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.","detection":"Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.","procedures":["[G0003] Cleaver: Cleaver has used custom tools to facilitate ARP cache poisoning.","[G1014] LuminousMoth: LuminousMoth has used ARP spoofing to redirect a compromised machine to an actor-controlled website."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1557.003","technique_name":"Adversary-in-the-Middle: DHCP Spoofing","description":"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients. The typical server-client interaction is as follows: 1. The client broadcasts a `DISCOVER` message. 2. The server responds with an `OFFER` message, which includes an available network address. 3. The client broadcasts a `REQUEST` message, which includes the network address offered. 4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters. Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers. Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network. DHCPv6 clients can receive network configuration information without being assigned an IP address by sending a INFORMATION-REQUEST (code 11) message to the All_DHCP_Relay_Agents_and_Servers multicast address. Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations. Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, Service Exhaustion Flood) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool.","detection":"Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.","procedures":null,"tactics":"TA0009 - Collection"}
{"technique_id":"T1557.004","technique_name":"Adversary-in-the-Middle: Evil Twin","description":"Adversaries may host seemingly genuine Wi-Fi access points to deceive users into connecting to malicious networks as a way of supporting follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or Input Capture. By using a Service Set Identifier (SSID) of a legitimate Wi-Fi network, fraudulent Wi-Fi access points may trick devices or users into connecting to malicious Wi-Fi networks. Adversaries may provide a stronger signal strength or block access to Wi-Fi access points to coerce or entice victim devices into connecting to malicious networks. A Wi-Fi Pineapple – a network security auditing and penetration testing tool – may be deployed in Evil Twin attacks for ease of use and broader range. Custom certificates may be used in an attempt to intercept HTTPS traffic. Similarly, adversaries may also listen for client devices sending probe requests for known or previously connected networks (Preferred Network Lists or PNLs). When a malicious access point receives a probe request, adversaries can respond with the same SSID to imitate the trusted, known network. Victim devices are led to believe the responding access point is from their PNL and initiate a connection to the fraudulent network. Upon logging into the malicious Wi-Fi access point, a user may be directed to a fake login page or captive portal webpage to capture the victim’s credentials. Once a user is logged into the fraudulent Wi-Fi network, the adversary may able to monitor network activity, manipulate data, or steal additional credentials. Locations with high concentrations of public Wi-Fi access, such as airports, coffee shops, or libraries, may be targets for adversaries to set up illegitimate Wi-Fi access points.","detection":null,"procedures":["[G0007] APT28: APT28 has used a Wi-Fi Pineapple to set up Evil Twin Wi-Fi Poisoning for the purposes of capturing victim credentials or planting espionage-oriented malware."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1560.001","technique_name":"Archive Collected Data: Archive via Utility","description":"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport. Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as tar on Linux and macOS or zip on Windows systems. On Windows, diantz or makecab may be used to package collected files into a cabinet (.cab) file. diantz may also be used to download and compress files from remote locations (i.e. Remote Data Staging). xcopy on Windows can copy files and directories with a variety of options. Additionally, adversaries may use certutil to Base64 encode collected data before exfiltration. Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.","detection":"Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used. Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.","procedures":["[S0538] Crutch: Crutch has used the WinRAR utility to compress and encrypt stolen files.","[S0439] Okrum: Okrum was seen using a RAR archiver tool to compress/decompress data.","[G0125] HAFNIUM: HAFNIUM has used 7-Zip and WinRAR to compress stolen files for exfiltration.","[S0160] certutil: certutil may be used to Base64 encode collected data.","[C0012] Operation CuckooBees: During Operation CuckooBees, the threat actors used the Makecab utility to compress and a version of WinRAR to create password-protected archives of stolen data prior to exfiltration.","[G0045] menuPass: menuPass has compressed files before exfiltration using TAR and RAR.","[G0102] Wizard Spider: Wizard Spider has archived data into ZIP files on compromised machines.","[G0064] APT33: APT33 has used WinRAR to compress data prior to exfil.","[C0051] APT28 Nearest Neighbor Campaign: During APT28 Nearest Neighbor Campaign, APT28 used built-in PowerShell capabilities (Compress-Archive cmdlet) to compress collected data.","[S1043] ccf32: ccf32 has used `xcopy \\\\\\c$\\users\\public\\path.7z c:\\users\\public\\bin\\.7z /H /Y` to archive collected files.","[G0117] Fox Kitten: Fox Kitten has used 7-Zip to archive data.","[G0052] CopyKittens: CopyKittens uses ZPP, a .NET console program, to compress files with ZIP.","[G1017] Volt Typhoon: Volt Typhoon has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip.","[S0260] InvisiMole: InvisiMole uses WinRAR to compress data that is intended to be exfiltrated.","[G0006] APT1: APT1 has used RAR to compress files before moving them outside of the victim network.","[G0129] Mustang Panda: Mustang Panda has used RAR to create password-protected archives of collected documents prior to exfiltration.","[G1040] Play: Play has used WinRAR to compress files prior to exfiltration.","[G0114] Chimera: Chimera has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.","[S0062] DustySky: DustySky can compress files via RAR while staging data to be exfiltrated.","[G0084] Gallmaker: Gallmaker has used WinZip, likely to archive data prior to exfiltration.","[S0187] Daserf: Daserf hides collected data in password-protected .rar archives.","[S1141] LunarWeb: LunarWeb can create a ZIP archive with specified files and directories.","[G1041] Sea Turtle: Sea Turtle used the tar utility to create a local archive of email data on a victim system.","[G0087] APT39: APT39 has used WinRAR and 7-Zip to compress an archive stolen data.","[S0378] PoshC2: PoshC2 contains a module for compressing data using ZIP.","[C0014] Operation Wocao: During Operation Wocao, threat actors archived collected files with WinRAR, prior to exfiltration.","[S1168] SampleCheck5000: SampleCheck5000 can gzip compress files uploaded to a shared mailbox used for C2 and exfiltration.","[G1039] RedCurl: RedCurl has downloaded 7-Zip to decompress password protected archives.","[G1023] APT5: APT5 has used the JAR/ZIP file format for exfiltrated files.","[G1030] Agrius: Agrius used 7zip to archive extracted data in preparation for exfiltration.","[S0196] PUNCHBUGGY: PUNCHBUGGY has Gzipped information and saved it to a random temp file before exfil.","[S0458] Ramsay: Ramsay can compress and archive collected files using WinRAR.","[C0007] FunnyDream: During FunnyDream, the threat actors used 7zr.exe to add collected files to an archive.","[S0647] Turian: Turian can use WinRAR to create a password-protected archive for files of interest.","[G0093] GALLIUM: GALLIUM used WinRAR to compress and encrypt stolen data prior to exfiltration.","[G0096] APT41: APT41 created a RAR archive of targeted files for exfiltration. Additionally, APT41 used the makecab.exe utility to both download tools, such as NATBypass, to the victim network and to archive a file for exfiltration.","[S1022] IceApple: IceApple can encrypt and compress files using Gzip prior to exfiltration.","[G0069] MuddyWater: MuddyWater has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded.","[G0007] APT28: APT28 has used a variety of utilities, including WinRAR, to archive collected data with password protection.","[S0278] iKitten: iKitten will zip up the /Library/Keychains directory before exfiltrating it.","[S0466] WindTail: WindTail has the ability to use the macOS built-in zip utility to archive files.","[C0026] C0026: During C0026, the threat actors used WinRAR to collect documents on targeted systems. The threat actors appeared to only exfiltrate files created after January 1, 2021.","[G0010] Turla: Turla has encrypted files stolen from connected USB drives into a RAR file before exfiltration.","[S0212] CORALDECK: CORALDECK has created password-protected RAR, WinImage, and zip archives to be exfiltrated.","[G0054] Sowbug: Sowbug extracted documents and bundled them into a RAR archive.","[S0339] Micropsia: Micropsia creates a RAR archive based on collected files on the victim's machine.","[C0006] Operation Honeybee: During Operation Honeybee, the threat actors uses zip to pack collected files before exfiltration.","[G0060] BRONZE BUTLER: BRONZE BUTLER has compressed data into password-protected RAR archives prior to exfiltration.","[C0029] Cutting Edge: During Cutting Edge, threat actors saved collected data to a tar archive.","[S0340] Octopus: Octopus has compressed data before exfiltrating it using a tool called Abbrevia.","[G0094] Kimsuky: Kimsuky has used QuickZip to archive stolen files before exfiltration.","[G0022] APT3: APT3 has used tools to compress data before exfilling it.","[S0264] OopsIE: OopsIE compresses collected files with GZipStream before sending them to its C2 server.","[G0061] FIN8: FIN8 has used RAR to compress collected data before exfiltration.","[G0004] Ke3chang: Ke3chang is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.","[C0040] APT41 DUST: APT41 DUST used `rar` to compress data downloaded from internal Oracle databases prior to exfiltration.","[G0030] Lotus Blossom: Lotus Blossom has used WinRAR for compressing data in RAR format.","[S0274] Calisto: Calisto uses the zip -r command to compress the data collected on the local system.","[G1016] FIN13: FIN13 has compressed the dump output of compromised credentials with a 7zip binary.","[G1006] Earth Lusca: Earth Lusca has used WinRAR to compress stolen files into an archive prior to exfiltration.","[S0192] Pupy: Pupy can compress data with Zip before sending it over C2.","[S1040] Rclone: Rclone can compress files using `gzip` prior to exfiltration.","[G0059] Magic Hound: Magic Hound has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders.","[S0441] PowerShower: PowerShower has used 7Zip to compress .txt, .pdf, .xls or .doc files prior to exfiltration.","[S0622] AppleSeed: AppleSeed can zip and encrypt data collected on a target system.","[G0143] Aquatic Panda: Aquatic Panda has used several publicly available tools, including WinRAR and 7zip, to compress collected files and memory dumps prior to exfiltration.","[S1210] Sagerunex: Sagerunex has archived collected materials in RAR format.","[G1032] INC Ransom: INC Ransom has used 7-Zip and WinRAR to archive collected data prior to exfiltration.","[C0024] SolarWinds Compromise: During the SolarWinds Compromise, APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; APT29 also compressed text files into zipped archives.","[S0428] PoetRAT: PoetRAT has the ability to compress files with zip.","[G1024] Akira: Akira uses utilities such as WinRAR to archive data prior to exfiltration.","[C0022] Operation Dream Job: During Operation Dream Job, Lazarus Group archived victim's data into a RAR file.","[G1022] ToddyCat: ToddyCat has leveraged xcopy, 7zip, and RAR to stage and compress collected documents prior to exfiltration."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1560.002","technique_name":"Archive Collected Data: Archive via Library","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data. Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.","detection":"Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used. Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.","procedures":["[S0467] TajMahal: TajMahal has the ability to use the open source libraries XZip/Xunzip and zlib to compress files.","[S1141] LunarWeb: LunarWeb can zlib-compress data prior to exfiltration.","[S0086] ZLib: The ZLib backdoor compresses communications using the standard Zlib compression library.","[S0127] BBSRAT: BBSRAT can compress data with ZLIB prior to sending it back to the C2 server.","[S0260] InvisiMole: InvisiMole can use zlib to compress and decompress data.","[S0053] SeaDuke: SeaDuke compressed data with zlib prior to sending it over C2.","[S0354] Denis: Denis compressed collected data using zlib.","[S0091] Epic: Epic compresses the collected data with bzip2 before sending it to the C2 server.","[S0642] BADFLICK: BADFLICK has compressed data using the aPLib compression library.","[S0348] Cardinal RAT: Cardinal RAT applies compression to C2 traffic using the ZLIB library.","[S0352] OSX_OCEANLOTUS.D: OSX_OCEANLOTUS.D scrambles and encrypts data using AES256 before sending it to the C2 server.","[G0032] Lazarus Group: Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.","[S0661] FoggyWeb: FoggyWeb can invoke the `Common.Compress` method to compress data with the C# GZipStream compression class.","[S1044] FunnyDream: FunnyDream has compressed collected files with zLib.","[G0027] Threat Group-3390: Threat Group-3390 has used RAR to compress, encrypt, and password-protect files prior to exfiltration."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1560.003","technique_name":"Archive Collected Data: Archive via Custom Method","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.","detection":"Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.","procedures":["[S0438] Attor: Attor encrypts collected data with a custom implementation of Blowfish and RSA ciphers.","[S0657] BLUELIGHT: BLUELIGHT has encoded data into a binary blob using XOR.","[G0037] FIN6: FIN6 has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation.","[S0038] Duqu: Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.","[S0603] Stuxnet: Stuxnet encrypts exfiltrated data via C2 with static 31-byte long XOR keys.","[S0035] SPACESHIP: Data SPACESHIP copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.","[G0052] CopyKittens: CopyKittens encrypts data with a substitute cipher prior to exfiltration.","[S0661] FoggyWeb: FoggyWeb can use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also, FoggyWeb can encode C2 command output within a legitimate WebP file.","[S0198] NETWIRE: NETWIRE has used a custom encryption algorithm to encrypt collected data.","[S0448] Rising Sun: Rising Sun can archive data using RC4 encryption and Base64 encoding prior to exfiltration.","[S0491] StrongPity: StrongPity can compress and encrypt archived files into multiple .sft files with a repeated xor encryption scheme.","[S0258] RGDoor: RGDoor encrypts files with XOR before sending them back to the C2 server.","[S0169] RawPOS: RawPOS encodes credit card data it collected from the victim with XOR.","[S1059] metaMain: metaMain has used XOR-based encryption for collected files before exfiltration.","[S0458] Ramsay: Ramsay can store collected documents in a custom container after encrypting and compressing them using RC4 and WinRAR.","[G0129] Mustang Panda: Mustang Panda has encrypted documents with RC4 prior to exfiltration.","[G0094] Kimsuky: Kimsuky has used RC4 encryption before exfil.","[S0264] OopsIE: OopsIE compresses collected files with a simple character replacement scheme before sending them to its C2 server.","[S0615] SombRAT: SombRAT has encrypted collected data with AES-256 using a hardcoded key.","[S0409] Machete: Machete's collected data is encrypted with AES before exfiltration.","[S0172] Reaver: Reaver encrypts collected data with an incremental XOR key prior to exfiltration.","[S0391] HAWKBALL: HAWKBALL has encrypted data with XOR before sending it over the C2 channel.","[S0072] OwaAuth: OwaAuth DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.","[S0260] InvisiMole: InvisiMole uses a variation of the XOR cipher to encrypt files before exfiltration.","[S0098] T9000: T9000 encrypts collected data using a single byte XOR key.","[S0045] ADVSTORESHELL: ADVSTORESHELL compresses output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm.","[G0030] Lotus Blossom: Lotus Blossom has used custom tools to compress and archive data on victim systems.","[S1030] Squirrelwaffle: Squirrelwaffle has encrypted collected data using a XOR-based algorithm.","[S0439] Okrum: Okrum has used a custom implementation of AES encryption to encrypt collected data.","[S0352] OSX_OCEANLOTUS.D: OSX_OCEANLOTUS.D has used AES in CBC mode to encrypt collected data when saving that data to disk.","[S1044] FunnyDream: FunnyDream has compressed collected files with zLib and encrypted them using an XOR operation with the string key from the command line or `qwerasdf` if the command line argument doesn’t contain the key. File names are obfuscated using XOR with the same key as the compressed file content.","[S0443] MESSAGETAP: MESSAGETAP has XOR-encrypted and stored contents of SMS messages that matched its target list.","[S1042] SUGARDUMP: SUGARDUMP has encrypted collected data using AES CBC mode and encoded it using Base64.","[C0017] C0017: During C0017, APT41 hex-encoded PII data prior to exfiltration.","[S0503] FrameworkPOS: FrameworkPOS can XOR credit card information before exfiltration.","[S0092] Agent.btz: Agent.btz saves system information into an XML file that is then XOR-encoded.","[G0032] Lazarus Group: A Lazarus Group malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.","[S0036] FLASHFLOOD: FLASHFLOOD employs the same encoding scheme as SPACESHIP for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23."],"tactics":"TA0009 - Collection"}
{"technique_id":"T1602.001","technique_name":"Data from Configuration Repository: SNMP (MIB Dump)","description":"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP). The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages. The MIB may also contain device operational information, including running configuration, routing table, and interface details. Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.","detection":"Identify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.","procedures":null,"tactics":"TA0009 - Collection"}
{"technique_id":"T1602.002","technique_name":"Data from Configuration Repository: Network Device Configuration Dump","description":"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use. Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files. These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis.","detection":"Identify network traffic sent or received by untrusted hosts or networks. Configure signatures to identify strings that may be found in a network device configuration.","procedures":["[G1045] Salt Typhoon: Salt Typhoon has attempted to acquire credentials by dumping network device configurations."],"tactics":"TA0009 - Collection"}