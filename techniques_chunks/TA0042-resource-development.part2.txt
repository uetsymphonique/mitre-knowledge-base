{"technique_id":"T1586.002","technique_name":"Compromise Accounts: Email Accounts","description":"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains). A variety of methods exist for compromising email accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials. Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or Phishing emails may evade reputation-based email filtering rules. Adversaries can use a compromised email account to hijack existing email threads with targets of interest.","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).","procedures":["[G0007] APT28: APT28 has used compromised email accounts to send credential phishing emails.","[G0059] Magic Hound: Magic Hound has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information.","[G0049] OilRig: OilRig has compromised email accounts to send phishing emails.","[G1001] HEXANE: HEXANE has used compromised accounts to send spearphishing emails.","[G0094] Kimsuky: Kimsuky has compromised email accounts to send spearphishing e-mails.","[G1004] LAPSUS$: LAPSUS$ has payed employees, suppliers, and business partners of target organizations for credentials.","[G0136] IndigoZebra: IndigoZebra has compromised legitimate email accounts to use in their spearphishing operations.","[G1037] TA577: TA577 has sent thread hijacked messages from compromised emails.","[G0016] APT29: APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts.","[G1033] Star Blizzard: Star Blizzard has used compromised email accounts to conduct spearphishing against contacts of the original victim.","[G0065] Leviathan: Leviathan has compromised email accounts to conduct social engineering attacks."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1586.003","technique_name":"Compromise Accounts: Cloud Accounts","description":"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Additionally, cloud-based messaging services such as Twilio, SendGrid, AWS End User Messaging, AWS SNS (Simple Notification Service), or AWS SES (Simple Email Service) may be leveraged for spam or Phishing. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers. A variety of methods exist for compromising cloud accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, conducting Password Spraying attacks, or attempting to Steal Application Access Tokens. Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a Trusted Relationship between service providers and their customers.","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: Transfer Data to Cloud Account).","procedures":["[C0040] APT41 DUST: APT41 DUST used compromised Google Workspace accounts for command and control.","[G0016] APT29: APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1587.001","technique_name":"Develop Capabilities: Malware","description":"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors. As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware. Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of Web Services.","detection":"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","procedures":["[G0094] Kimsuky: Kimsuky has developed its own unique malware such as MailFetch.py for use in operations.","[G1016] FIN13: FIN13 has utilized custom malware to maintain persistence in a compromised environment.","[G1036] Moonstone Sleet: Moonstone Sleet has developed custom malware, including a malware delivery mechanism masquerading as a legitimate game.","[G0119] Indrik Spider: Indrik Spider has developed malware for their operations, including ransomware such as BitPaymer and WastedLocker.","[C0014] Operation Wocao: During Operation Wocao, threat actors developed their own custom webshells to upload to compromised servers.","[G0032] Lazarus Group: Lazarus Group has developed custom malware for use in their operations.","[G0049] OilRig: OilRig actively developed and used a series of downloaders during 2022.","[G1014] LuminousMoth: LuminousMoth has used unique malware for information theft and exfiltration.","[G0034] Sandworm Team: Sandworm Team has developed malware for its operations, including malicious mobile applications and destructive malware such as NotPetya and Olympic Destroyer.","[G1045] Salt Typhoon: Salt Typhoon has used custom tooling including JumbledPath.","[G0016] APT29: APT29 has used unique malware in many of their operations.","[G1040] Play: Play developed and employ Playcrypt ransomware.","[G1007] Aoqin Dragon: Aoqin Dragon has used custom malware, including Mongall and Heyoka Backdoor, in their operations.","[C0024] SolarWinds Compromise: For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP.","[G1039] RedCurl: RedCurl has created its own tools to use during operations.","[G0003] Cleaver: Cleaver has created customized tools and payloads for functions including ARP poisoning, encryption, credential dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and SMB communications, network interface sniffing, and keystroke logging.","[C0023] Operation Ghost: For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke.","[G1009] Moses Staff: Moses Staff has built malware, such as DCSrv and PyDCrypt, for targeting victims' machines.","[C0030] Triton Safety Instrumented System Attack: In the Triton Safety Instrumented System Attack, TEMP.Veles developed, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software.","[C0046] ArcaneDoor: ArcaneDoor featured the development and deployment of two unique malware types, Line Dancer and Line Runner.","[C0010] C0010: For C0010, UNC3890 actors used unique malware, including SUGARUSH and SUGARDUMP.","[G0010] Turla: Turla has developed its own unique malware for use in operations.","[C0044] Juicy Mix: For Juicy Mix, OilRig improved on Solar by developing the Mango backdoor.","[C0004] CostaRicto: For CostaRicto, the threat actors used custom malware, including PS1, CostaBricks, and SombRAT.","[C0042] Outer Space: For Outer Space, OilRig created new implants including the Solar backdoor.","[C0013] Operation Sharpshooter: For Operation Sharpshooter, the threat actors used the Rising Sun modular backdoor.","[G0004] Ke3chang: Ke3chang has developed custom malware that allowed them to maintain persistence on victim networks.","[C0039] Versa Director Zero Day Exploitation: Versa Director Zero Day Exploitation involved the development of a new web shell variant, VersaMem.","[C0022] Operation Dream Job: For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations.","[G0139] TeamTNT: TeamTNT has developed custom malware such as Hildegard.","[G0046] FIN7: FIN7 has developed malware for use in operations, including the creation of infected removable media."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1587.002","technique_name":"Develop Capabilities: Code Signing Certificates","description":"Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is. Prior to Code Signing, adversaries may develop self-signed code signing certificates for use in operations.","detection":"Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.","procedures":["[G1034] Daggerfly: Daggerfly created code signing certificates to sign malicious macOS files.","[G0056] PROMETHIUM: PROMETHIUM has created self-signed certificates to sign malicious installers.","[G0040] Patchwork: Patchwork has created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware.","[C0022] Operation Dream Job: During Operation Dream Job, Lazarus Group digitally signed their malware and the dbxcli utility."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1587.003","technique_name":"Develop Capabilities: Digital Certificates","description":"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA). Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if added to the root of trust (i.e. Install Root Certificate). After creating a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.","detection":"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Detection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.","procedures":["[G0016] APT29: APT29 has created self-signed digital certificates to enable mutual TLS authentication for malware.","[C0046] ArcaneDoor: ArcaneDoor included acquiring digital certificates mimicking patterns associated with Cisco ASA appliances for command and control infrastructure.","[G0056] PROMETHIUM: PROMETHIUM has created self-signed digital certificates for use in HTTPS C2 traffic.","[C0050] J-magic Campaign: During the J-magic Campaign, threat actors used self-signed certificates on VPS C2 infrastructure.","[C0011] C0011: For C0011, Transparent Tribe established SSL certificates on the typo-squatted domains the group registered."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1587.004","technique_name":"Develop Capabilities: Exploits","description":"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis. As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit. Adversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).","procedures":["[G1017] Volt Typhoon: Volt Typhoon has exploited zero-day vulnerabilities for initial access.","[G0065] Leviathan: Leviathan has rapidly transformed and adapted public exploit proof-of-concept code for new vulnerabilities and utilized them against target networks."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.001","technique_name":"Obtain Capabilities: Malware","description":"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors. In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).","detection":"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","procedures":["[G1014] LuminousMoth: LuminousMoth has obtained and used malware such as Cobalt Strike.","[C0002] Night Dragon: During Night Dragon, threat actors used Trojans from underground hacker websites.","[C0005] Operation Spalax: For Operation Spalax, the threat actors obtained malware, including Remcos, njRAT, and AsyncRAT.","[G1018] TA2541: TA2541 has used multiple strains of malware available for purchase on criminal forums or in open-source repositories.","[G1003] Ember Bear: Ember Bear has acquired malware and related tools from dark web forums.","[G1004] LAPSUS$: LAPSUS$ acquired and used the Redline password stealer in their operations.","[G1013] Metador: Metador has used unique malware in their operations, including metaMain and Mafalda.","[C0050] J-magic Campaign: During the J-magic Campaign campaign, threat actors used open-source malware post-compromise including a custom variant of the cd00r backdoor.","[G0006] APT1: APT1 used publicly available malware for privilege escalation.","[G0143] Aquatic Panda: Aquatic Panda has acquired and used njRAT in its operations.","[G0140] LazyScripter: LazyScripter has used a variety of open-source remote access Trojans for its operations.","[C0007] FunnyDream: For FunnyDream, the threat actors used a new backdoor named FunnyDream.","[G0138] Andariel: Andariel has used a variety of publicly-available remote access Trojans (RATs) for its operations.","[G0092] TA505: TA505 has used malware such as Azorult and Cobalt Strike in their operations.","[G0010] Turla: Turla has used malware obtained after compromising other threat actors, such as OilRig.","[C0015] C0015: For C0015, the threat actors used Cobalt Strike and Conti ransomware.","[G1006] Earth Lusca: Earth Lusca has acquired and used a variety of malware, including Cobalt Strike.","[G0135] BackdoorDiplomacy: BackdoorDiplomacy has obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.002","technique_name":"Obtain Capabilities: Tool","description":"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions. Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).","detection":"In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","procedures":["[G0105] DarkVishnya: DarkVishnya has obtained and used tools such as Impacket, Winexe, and PsExec.","[G0010] Turla: Turla has obtained and customized publicly-available tools like Mimikatz.","[C0032] C0032: During the C0032 campaign, TEMP.Veles obtained and used tools such as Mimikatz and PsExec.","[G0100] Inception: Inception has obtained and used open-source tools such as LaZagne.","[G0059] Magic Hound: Magic Hound has obtained and used tools like Havij, sqlmap, Metasploit, Mimikatz, and Plink.","[C0005] Operation Spalax: For Operation Spalax, the threat actors obtained packers such as CyaX.","[G1002] BITTER: BITTER has obtained tools such as PuTTY for use in their operations.","[G0094] Kimsuky: Kimsuky has obtained and used tools such as Nirsoft WebBrowserPassVIew, Mimikatz, and PsExec.","[G0098] BlackTech: BlackTech has obtained and used tools such as Putty, SNScan, and PsExec for its operations.","[G0069] MuddyWater: MuddyWater has used legitimate tools ConnectWise, RemoteUtilities, and SimpleHelp to gain access to the target environment.","[G1004] LAPSUS$: LAPSUS$ has obtained tools such as RVTools and AD Explorer for their operations.","[C0030] Triton Safety Instrumented System Attack: In the Triton Safety Instrumented System Attack, TEMP.Veles used tools such as Mimikatz and other open-source software.","[G0077] Leafminer: Leafminer has obtained and used tools such as LaZagne, Mimikatz, PsExec, and MailSniper.","[G0016] APT29: APT29 has obtained and used a variety of tools including Mimikatz, SDelete, Tor, meek, and Cobalt Strike.","[G0007] APT28: APT28 has obtained and used open-source tools like Koadic, Mimikatz, and Responder.","[G0102] Wizard Spider: Wizard Spider has utilized tools such as Empire, Cobalt Strike, Cobalt Strike, Rubeus, AdFind, BloodHound, Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts.","[G1046] Storm-1811: Storm-1811 acquired various legitimate and malicious tools, such as RMM software and commodity malware packages, for operations.","[G0060] BRONZE BUTLER: BRONZE BUTLER has obtained and used open-source tools such as Mimikatz, gsecdump, and Windows Credential Editor.","[G0045] menuPass: menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump.","[G0096] APT41: APT41 has obtained and used tools such as Mimikatz, pwdump, PowerSploit, and Windows Credential Editor.","[G0061] FIN8: FIN8 has used open-source tools such as Impacket for targeting efforts.","[G0092] TA505: TA505 has used a variety of tools in their operations, including AdFind, BloodHound, Mimikatz, and PowerSploit.","[G0087] APT39: APT39 has modified and used customized versions of publicly-available tools like PLINK and Mimikatz.","[G0093] GALLIUM: GALLIUM has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions.","[G0003] Cleaver: Cleaver has obtained and used open-source tools such as PsExec, Windows Credential Editor, and Mimikatz.","[G0135] BackdoorDiplomacy: BackdoorDiplomacy has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.","[G1021] Cinnamon Tempest: Cinnamon Tempest has used open-source tools including customized versions of the Iox proxy tool, NPS tunneling tool, Meterpreter, and a keylogger that uploads data to Alibaba cloud storage.","[G0049] OilRig: OilRig has made use of the publicly available tools including Plink and Mimikatz.","[G1018] TA2541: TA2541 has used commodity remote access tools.","[G0037] FIN6: FIN6 has obtained and used tools such as Mimikatz, Cobalt Strike, and AdFind.","[G0034] Sandworm Team: Sandworm Team has acquired open-source tools for their operations, including Invoke-PSImage, which was used to establish an encrypted channel from a compromised host to Sandworm Team's C2 server in preparation for the 2018 Winter Olympics attack, as well as Impacket and RemoteExec, which were used in their 2022 Prestige operations. Additionally, Sandworm Team has used Empire, Cobalt Strike and PoshC2.","[G0040] Patchwork: Patchwork has obtained and used open-source tools such as QuasarRAT.","[G0046] FIN7: FIN7 has utilized a variety of tools such as Cobalt Strike, PowerSploit, and the remote management tool, Atera for targeting efforts.","[C0012] Operation CuckooBees: For Operation CuckooBees, the threat actors obtained publicly-available JSP code that was used to deploy a webshell onto a compromised server.","[G1014] LuminousMoth: LuminousMoth has obtained an ARP spoofing tool from GitHub.","[G1041] Sea Turtle: Sea Turtle has used tools such as Adminer during intrusions.","[C0002] Night Dragon: During Night Dragon, threat actors obtained and used tools such as gsecdump.","[G0099] APT-C-36: APT-C-36 obtained and used a modified variant of Imminent Monitor.","[G0090] WIRTE: WIRTE has obtained and used Empire for post-exploitation activities.","[G1016] FIN13: FIN13 has utilized publicly available tools such as Mimikatz, Impacket, PWdump7, ProcDump, Nmap, and Incognito V2 for targeting efforts.","[G0080] Cobalt Group: Cobalt Group has obtained and used a variety of tools including Mimikatz, PsExec, Cobalt Strike, and SDelete.","[C0021] C0021: For C0021, the threat actors used Cobalt Strike configured with a modified variation of the publicly available Pandora Malleable C2 Profile.","[G0004] Ke3chang: Ke3chang has obtained and used tools such as Mimikatz.","[G0027] Threat Group-3390: Threat Group-3390 has obtained and used tools such as Impacket, pwdump, Mimikatz, gsecdump, NBTscan, and Windows Credential Editor.","[G0032] Lazarus Group: Lazarus Group has obtained a variety of tools for their operations, including Responder and PuTTy PSCP.","[G0053] FIN5: FIN5 has obtained and used a customized version of PsExec, as well as use other tools such as pwdump, SDelete, and Windows Credential Editor.","[C0045] ShadowRay: During ShadowRay, threat actors used tools including the XMRig miner and Interactsh.","[G0076] Thrip: Thrip has obtained and used tools such as Mimikatz and PsExec.","[G1009] Moses Staff: Moses Staff has used the commercial tool DiskCryptor.","[C0014] Operation Wocao: For Operation Wocao, the threat actors obtained a variety of open source tools, including JexBoss, KeeThief, and BloodHound.","[C0004] CostaRicto: During CostaRicto, the threat actors obtained open source tools to use in their operations.","[G1005] POLONIUM: POLONIUM has obtained and used tools such as AirVPN and plink in their operations.","[G0011] PittyTiger: PittyTiger has obtained and used tools such as Mimikatz and gsecdump.","[G1001] HEXANE: HEXANE has acquired, and sometimes customized, open source tools such as Mimikatz, Empire, VNC remote access software, and DIG.net.","[C0048] Operation MidnightEclipse: During Operation MidnightEclipse, threat actors used the GO Simple Tunnel (GOST) reverse proxy tool.","[G0107] Whitefly: Whitefly has obtained and used tools such as Mimikatz.","[G0030] Lotus Blossom: Lotus Blossom has used publicly-available tools such as a Python-based cookie stealer for Chrome browsers, Impacket, and the Venom proxy tool.","[G0051] FIN10: FIN10 has relied on publicly-available software to gain footholds and establish persistence in victim environments.","[G1032] INC Ransom: INC Ransom has acquired and used several tools including MegaSync, AnyDesk, esentutl and PsExec.","[G0035] Dragonfly: Dragonfly has obtained and used tools such as Mimikatz, CrackMapExec, and PsExec.","[G0136] IndigoZebra: IndigoZebra has acquired open source tools such as NBTscan and Meterpreter for their operations.","[G0143] Aquatic Panda: Aquatic Panda has acquired and used Cobalt Strike in its operations.","[G1007] Aoqin Dragon: Aoqin Dragon obtained the Heyoka open source exfiltration tool and subsequently modified it for their operations.","[G0082] APT38: APT38 has obtained and used open-source tools such as Mimikatz.","[G1006] Earth Lusca: Earth Lusca has acquired and used a variety of open source tools.","[G0064] APT33: APT33 has obtained and leveraged publicly-available tools for early intrusion activities.","[C0022] Operation Dream Job: For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli.","[G0137] Ferocious Kitten: Ferocious Kitten has obtained open source tools for its operations, including JsonCPP and Psiphon.","[G0050] APT32: APT32 has obtained and used tools such as Mimikatz and Cobalt Strike, and a variety of other open-source tools from GitHub.","[C0018] C0018: For C0018, the threat actors acquired a variety of open source tools, including Mimikatz, Sliver, SoftPerfect Network Scanner, AnyDesk, and PDQ Deploy.","[G1033] Star Blizzard: Star Blizzard has incorporated the open-source EvilGinx framework into their spearphishing activity.","[G0078] Gorgon Group: Gorgon Group has obtained and used tools such as QuasarRAT and Remcos.","[G0091] Silence: Silence has obtained and modified versions of publicly-available tools like Empire and PsExec.","[G0047] Gamaredon Group: Gamaredon Group has used various legitimate tools, such as `mshta.exe` and Reg, and services during operations.","[G0114] Chimera: Chimera has obtained and used tools such as BloodHound, Cobalt Strike, Mimikatz, and PsExec.","[G1013] Metador: Metador has used Microsoft's Console Debugger in some of their operations.","[G0052] CopyKittens: CopyKittens has used Metasploit, Empire, and AirVPN for post-exploitation activities.","[G0122] Silent Librarian: Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.","[C0027] C0027: During C0027, Scattered Spider obtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner.","[G1040] Play: Play has used multiple tools for discovery and defense evasion purposes on compromised hosts.","[C0010] C0010: For C0010, UNC3890 actors obtained multiple publicly-available tools, including METASPLOIT, UNICORN, and NorthStar C2.","[G1045] Salt Typhoon: Salt Typhoon has used publicly available tooling to exploit vulnerabilities.","[G1017] Volt Typhoon: Volt Typhoon has used legitimate network and forensic tools and customized versions of open-source tools for C2.","[C0052] SPACEHOP Activity: SPACEHOP Activity leverages a C2 framework sourced from a publicly-available Github repository for administration of relay nodes.","[C0001] Frankenstein: For Frankenstein, the threat actors obtained and used Empire.","[G0073] APT19: APT19 has obtained and used publicly-available tools like Empire.","[G1044] APT42: APT42 has used built-in features in the Microsoft 365 environment and publicly available tools to avoid detection.","[C0015] C0015: For C0015, the threat actors obtained a variety of tools, including AdFind, AnyDesk, and Process Hacker.","[C0017] C0017: For C0017, APT41 obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato.","[C0007] FunnyDream: For FunnyDream, the threat actors used a modified version of the open source PcShare remote administration tool.","[C0038] HomeLand Justice: During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket.","[G0108] Blue Mockingbird: Blue Mockingbird has obtained and used tools such as Mimikatz.","[C0029] Cutting Edge: During Cutting Edge, threat actors leveraged tools including Interactsh to identify vulnerable targets, PySoxy to simultaneously dispatch traffic between multiple endpoints, BusyBox to enable post exploitation activities, and Kubo Injector to inject shared objects into process memory.","[G0006] APT1: APT1 has used various open-source tools for privilege escalation purposes.","[G0008] Carbanak: Carbanak has obtained and used open-source tools such as PsExec and Mimikatz.","[G0079] DarkHydrus: DarkHydrus has obtained and used tools such as Mimikatz, Empire, and Cobalt Strike."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.003","technique_name":"Obtain Capabilities: Code Signing Certificates","description":"Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is. Prior to Code Signing, adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.","detection":"Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.","procedures":["[G0102] Wizard Spider: Wizard Spider has obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads.","[G0049] OilRig: OilRig has obtained stolen code signing certificates to digitally sign malware.","[G0098] BlackTech: BlackTech has used stolen code-signing certificates for its malicious payloads.","[G0061] FIN8: FIN8 has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers.","[S0576] MegaCortex: MegaCortex has used code signing certificates issued to fake companies to bypass security controls.","[C0038] HomeLand Justice: During HomeLand Justice, threat actors used tools with legitimate code signing certificates.","[C0040] APT41 DUST: APT41 DUST used stolen code signing certificates to sign DUSTTRAP malware and components.","[C0022] Operation Dream Job: During Operation Dream Job, Lazarus Group used code signing certificates issued by Sectigo RSA for some of its malware and tools.","[G0027] Threat Group-3390: Threat Group-3390 has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations.","[G0094] Kimsuky: Kimsuky has stolen a valid certificate that is used to sign the malware and the dropper."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.004","technique_name":"Obtain Capabilities: Digital Certificates","description":"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if the certificate is trusted or otherwise added to the root of trust (i.e. Install Root Certificate). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities. Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for. Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free. After obtaining a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.","detection":"Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates. Detection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.","procedures":["[G0122] Silent Librarian: Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages.","[C0043] Indian Critical Infrastructure Intrusions: Indian Critical Infrastructure Intrusions included the use of digital certificates spoofing Microsoft.","[G0032] Lazarus Group: Lazarus Group has obtained SSL certificates for their C2 domains.","[G1041] Sea Turtle: Sea Turtle created new certificates using a technique called the actors performed \"certificate impersonation,\" a technique in which Sea Turtle obtained a certificate authority-signed X.509 certificate from another provider for the same domain imitating the one already used by the targeted organization.","[C0006] Operation Honeybee: For Operation Honeybee, the threat actors stole a digital signature from Adobe Systems to use with their MaoCheng dropper.","[C0047] RedDelta Modified PlugX Infection Chain Operations: Mustang Panda acquired Cloudflare Origin CA TLS certificates during RedDelta Modified PlugX Infection Chain Operations.","[G1014] LuminousMoth: LuminousMoth has used a valid digital certificate for some of their malware.","[G0098] BlackTech: BlackTech has used valid, stolen digital certificates for some of their malware and tools."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.005","technique_name":"Obtain Capabilities: Exploits","description":"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors. In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals. In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries). An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation. Adversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).","procedures":["[G1003] Ember Bear: Ember Bear has obtained exploitation scripts against publicly-disclosed vulnerabilities from public repositories.","[G0094] Kimsuky: Kimsuky has obtained exploit code for various CVEs."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.006","technique_name":"Obtain Capabilities: Vulnerabilities","description":"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases. An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. Exploits) or to attempt to develop one themselves (i.e. Exploits).","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of exploits for vulnerabilities (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).","procedures":["[G0034] Sandworm Team: In 2017, Sandworm Team conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport.","[G1017] Volt Typhoon: Volt Typhoon has used publicly available exploit code for initial access.","[C0049] Leviathan Australian Intrusions: Leviathan weaponized publicly-known vulnerabilities for initial access and other purposes during Leviathan Australian Intrusions."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1588.007","technique_name":"Obtain Capabilities: Artificial Intelligence","description":"Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks, including conducting Reconnaissance, creating basic scripts, assisting social engineering, and even developing payloads. For example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in Phishing/Phishing for Information campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting Develop Capabilities. AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., Obfuscated Files or Information) malicious scripts and payloads. Finally, AI-generated text, images, audio, and video may be used for fraud, Impersonation, and other malicious activities.","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of generative artificial intelligence (i.e. Phishing, Phishing for Information).","procedures":null,"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.001","technique_name":"Stage Capabilities: Upload Malware","description":"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server. Malware may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult. Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via User Execution. Masquerading may increase the chance of users mistakenly executing these files.","detection":"If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as User Execution or Ingress Tool Transfer.","procedures":["[G0034] Sandworm Team: Sandworm Team staged compromised versions of legitimate software installers in forums to enable initial access to executing user.","[G1018] TA2541: TA2541 has uploaded malware to various platforms including Google Drive, Pastetext, Sharetext, and GitHub.","[C0022] Operation Dream Job: For Operation Dream Job, Lazarus Group used compromised servers to host malware.","[C0002] Night Dragon: During Night Dragon, threat actors uploaded commonly available hacker tools to compromised web servers.","[G1006] Earth Lusca: Earth Lusca has staged malware and malicious files on compromised web servers, GitHub, and Google Drive.","[G0129] Mustang Panda: Mustang Panda has hosted malicious payloads on DropBox including PlugX.","[G1014] LuminousMoth: LuminousMoth has hosted malicious payloads on Dropbox.","[C0011] C0011: For C0011, Transparent Tribe hosted malicious documents on domains registered by the group.","[C0047] RedDelta Modified PlugX Infection Chain Operations: Mustang Panda staged malware on adversary-controlled domains and cloud storage instances during RedDelta Modified PlugX Infection Chain Operations.","[G0094] Kimsuky: Kimsuky has used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons, file exfiltrators, and implants.","[G1020] Mustard Tempest: Mustard Tempest has hosted payloads on acquired second-stage servers for periods of either days, weeks, or months.","[G0049] OilRig: OilRig has hosted malware on fake websites designed to target specific audiences.","[G0139] TeamTNT: TeamTNT has uploaded backdoored Docker images to Docker Hub.","[C0005] Operation Spalax: For Operation Spalax, the threat actors staged malware and malicious files in legitimate hosting services such as OneDrive or MediaFire.","[G0140] LazyScripter: LazyScripter has hosted open-source remote access Trojans used in its operations in GitHub.","[G0047] Gamaredon Group: Gamaredon Group has registered domains to stage payloads.","[G1033] Star Blizzard: Star Blizzard has uploaded malicious payloads to cloud storage sites.","[G0027] Threat Group-3390: Threat Group-3390 has hosted malicious payloads on Dropbox.","[G1008] SideCopy: SideCopy has used compromised domains to host its malicious payloads.","[C0010] C0010: For C0010, UNC3890 actors staged malware on their infrastructure for direct download onto a compromised system.","[C0013] Operation Sharpshooter: For Operation Sharpshooter, the threat actors staged malicious files on Dropbox and other websites.","[G0092] TA505: TA505 has staged malware on actor-controlled domains.","[G1043] BlackByte: BlackByte has staged tools such as Cobalt Strike at public file sharing and hosting sites.","[G1002] BITTER: BITTER has registered domains to stage payloads.","[C0021] C0021: For C0021, the threat actors uploaded malware to websites under their control.","[G0050] APT32: APT32 has hosted malicious payloads in Dropbox, Amazon S3, and Google Drive for use during targeting.","[G1001] HEXANE: HEXANE has staged malware on fraudulent websites set up to impersonate targeted organizations.","[G1031] Saint Bear: Saint Bear has used the Discord content delivery network for hosting malicious content referenced in links and emails.","[G1036] Moonstone Sleet: Moonstone Sleet staged malicious capabilities online for follow-on download by victims or malware.","[G0046] FIN7: FIN7 has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3.","[G1011] EXOTIC LILY: EXOTIC LILY has uploaded malicious payloads to file-sharing services including TransferNow, TransferXL, WeTransfer, and OneDrive.","[G1044] APT42: APT42 has used its infrastructure for C2 and for staging the VINETHORN payload, which masqueraded as a VPN application."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.002","technique_name":"Stage Capabilities: Upload Tool","description":"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server. Tools may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications. Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.","detection":"If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as Ingress Tool Transfer.","procedures":["[C0022] Operation Dream Job: For Operation Dream Job, Lazarus Group used multiple servers to host malicious tools.","[C0010] C0010: For C0010, UNC3890 actors staged tools on their infrastructure to download directly onto a compromised system.","[G0027] Threat Group-3390: Threat Group-3390 has staged tools, including gsecdump and WCE, on previously compromised websites."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.003","technique_name":"Stage Capabilities: Install Digital Certificate","description":"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it. Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. Adversaries can obtain digital certificates (see Digital Certificates) or create self-signed certificates (see Digital Certificates). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).","detection":"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Detection efforts may be focused on related behaviors, such as Web Protocols or Asymmetric Cryptography.","procedures":["[G1041] Sea Turtle: Sea Turtle captured legitimate SSL certificates from victim organizations and installed these on Sea Turtle-controlled infrastructure to enable subsequent adversary-in-the-middle operations."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.004","technique_name":"Stage Capabilities: Drive-by Target","description":"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure). Adversaries may upload or inject malicious web content, such as JavaScript, into websites. This may be done in a number of ways, including: * Inserting malicious scripts into web pages or other user controllable web content such as forum posts * Modifying script files served to websites from publicly writeable cloud storage buckets * Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., Malvertising) In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in Gather Victim Host Information) to ensure it is vulnerable prior to attempting exploitation. Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack. Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Drive-by Compromise.","detection":"If infrastructure or patterns in the malicious web content utilized to deliver a Drive-by Compromise have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution.","procedures":["[G0134] Transparent Tribe: Transparent Tribe has set up websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools.","[G1014] LuminousMoth: LuminousMoth has redirected compromised machines to an actor-controlled webpage through HTML injection.","[G0035] Dragonfly: Dragonfly has compromised websites to redirect traffic and to host exploit kits.","[G1012] CURIUM: CURIUM used strategic website compromise to fingerprint then target victims.","[G0050] APT32: APT32 has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate, but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update.","[G0046] FIN7: FIN7 has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products.","[G0027] Threat Group-3390: Threat Group-3390 has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest.","[C0010] C0010: For C0010, the threat actors compromised the login page of a legitimate Israeli shipping company and likely established a watering hole that collected visitor information.","[G1020] Mustard Tempest: Mustard Tempest has injected malicious JavaScript into compromised websites to infect victims via drive-by download."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.005","technique_name":"Stage Capabilities: Link Target","description":"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link. Typically, the resources for a link target will be an HTML page that may include some client-side script such as JavaScript to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during Spearphishing Link. Adversaries may also Upload Malware and have the link target point to malware for download/execution by the user. Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Malicious Link. Links can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing. Adversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages. In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links). Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.","detection":"If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during Spearphishing Link, Spearphishing Link, or Malicious Link.","procedures":["[G1014] LuminousMoth: LuminousMoth has created a link to a Dropbox file that has been used in their spear-phishing operations.","[G0122] Silent Librarian: Silent Librarian has cloned victim organization login pages and staged them for later use in credential harvesting campaigns. Silent Librarian has also made use of a variety of URL shorteners for these staged websites."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1608.006","technique_name":"Stage Capabilities: SEO Poisoning","description":"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms. To help facilitate Drive-by Compromise, adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as Drive-by Target) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news). In addition to internet search engines (such as Google), adversaries may also aim to manipulate specific in-site searches for developer platforms (such as GitHub) to deceive users towards Supply Chain Compromise lures. In-site searches will rank search results according to their own algorithms and metrics such as popularity which may be targeted and gamed by malicious actors. Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation. SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.","detection":null,"procedures":["[G1020] Mustard Tempest: Mustard Tempest has poisoned search engine results to return fake software updates in order to distribute malware."],"tactics":"TA0042 - Resource Development"}
{"technique_id":"T1650","technique_name":"Acquire Access","description":"Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other. Footholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., Web Shell) or established access via External Remote Services. In some cases, access brokers will implant compromised systems with a “load” that can be used to install additional malware for paying customers. By leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector. In some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a Trusted Relationship, Multi-Factor Authentication Interception, or even Supply Chain Compromise. **Note:** while this technique is distinct from other behaviors such as Purchase Technical Data and Credentials, they may often be used in conjunction (especially where the acquired foothold requires Valid Accounts).","detection":"Much of this takes place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","procedures":null,"tactics":"TA0042 - Resource Development"}