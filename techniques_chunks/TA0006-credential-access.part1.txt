{"technique_id":"T1003.001","technique_name":"OS Credential Dumping: LSASS Memory","description":"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material. As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system. For example, on the target host use procdump: * procdump -ma lsass.exe lsass_dump Locally, mimikatz can be run using: * sekurlsa::Minidump lsassdump.dmp * sekurlsa::logonPasswords Built-in Windows tools such as `comsvcs.dll` can also be used: * rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID lsass.dmp full Similar to Image File Execution Options Injection, the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`). Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called. The following SSPs can be used to access credentials: * Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package. * Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. * Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later. * CredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.","detection":"Monitor for unexpected processes interacting with LSASS.exe. Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.","procedures":["[G0119] Indrik Spider: Indrik Spider used Cobalt Strike to carry out credential dumping using ProcDump.","[C0014] Operation Wocao: During Operation Wocao, threat actors used ProcDump to dump credentials from memory.","[G0049] OilRig: OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access.","[G0003] Cleaver: Cleaver has been known to dump credentials using Mimikatz and Windows Credential Editor.","[G0077] Leafminer: Leafminer used several tools for retrieving login and password information, including LaZagne and Mimikatz.","[G0027] Threat Group-3390: Threat Group-3390 actors have used a modified version of Mimikatz called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.","[S0692] SILENTTRINITY: SILENTTRINITY can create a memory dump of LSASS via the `MiniDumpWriteDump Win32` API call.","[G0006] APT1: APT1 has been known to use credential dumping using Mimikatz.","[C0029] Cutting Edge: During Cutting Edge, threat actors used Task Manager to dump LSASS memory from Windows devices to disk.","[G0065] Leviathan: Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE.","[G0061] FIN8: FIN8 harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).","[S0349] LaZagne: LaZagne can perform credential dumping from memory to obtain account and password information.","[G0125] HAFNIUM: HAFNIUM has used procdump to dump the LSASS process memory.","[G0108] Blue Mockingbird: Blue Mockingbird has used Mimikatz to retrieve credentials from LSASS memory.","[S0121] Lslsass: Lslsass can dump active logon session password hashes from the lsass process.","[S0681] Lizar: Lizar can run Mimikatz to harvest credentials.","[G1017] Volt Typhoon: Volt Typhoon has attempted to access hashed credentials from the LSASS process memory space.","[G0107] Whitefly: Whitefly has used Mimikatz to obtain credentials.","[G0064] APT33: APT33 has used a variety of publicly available tools like LaZagne, Mimikatz, and ProcDump to dump credentials.","[G1016] FIN13: FIN13 has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory with Mimikatz.","[S0606] Bad Rabbit: Bad Rabbit has used Mimikatz to harvest credentials from the victim's machine.","[G0050] APT32: APT32 used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.","[G1030] Agrius: Agrius used tools such as Mimikatz to dump LSASS memory to capture credentials in victim environments.","[S0046] CozyCar: CozyCar has executed Mimikatz to harvest stored credentials from the victim and further victim penetration.","[S0357] Impacket: SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.","[G0093] GALLIUM: GALLIUM used a modified version of Mimikatz along with a PowerShell-based Mimikatz to dump credentials on the victim machines.","[S0368] NotPetya: NotPetya contains a modified version of Mimikatz to help gather credentials that are later used for lateral movement.","[S0192] Pupy: Pupy can execute Lazagne as well as Mimikatz using PowerShell.","[G1023] APT5: APT5 has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes. APT5 has also dumped clear text passwords and hashes from memory using Mimikatz hosted through an RDP mapped drive.","[S0154] Cobalt Strike: Cobalt Strike can spawn a job to inject into LSASS memory and dump password hashes.","[S0378] PoshC2: PoshC2 contains an implementation of Mimikatz to gather credentials from memory.","[G0060] BRONZE BUTLER: BRONZE BUTLER has used various tools (such as Mimikatz and WCE) to perform credential dumping.","[S0005] Windows Credential Editor: Windows Credential Editor can dump credentials.","[G0087] APT39: APT39 has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials.","[C0030] Triton Safety Instrumented System Attack: In the Triton Safety Instrumented System Attack, TEMP.Veles used Mimikatz.","[G0059] Magic Hound: Magic Hound has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using Mimikatz.","[G1006] Earth Lusca: Earth Lusca has used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process.","[S0428] PoetRAT: PoetRAT used voStro.exe, a compiled pypykatz (Python version of Mimikatz), to steal credentials.","[C0038] HomeLand Justice: During HomeLand Justice, threat actors dumped LSASS memory on compromised hosts.","[S0367] Emotet: Emotet has been observed dropping and executing password grabber modules including Mimikatz.","[G0068] PLATINUM: PLATINUM has used keyloggers that are also capable of dumping credentials.","[G0117] Fox Kitten: Fox Kitten has used prodump to dump credentials from LSASS.","[S0056] Net Crawler: Net Crawler uses credential dumpers such as Mimikatz and Windows Credential Editor to extract cached credentials from Windows systems.","[G0091] Silence: Silence has used the Farse6.1 utility (based on Mimikatz) to extract credentials from lsass.exe.","[C0025] 2016 Ukraine Electric Power Attack: During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials.","[S0583] Pysa: Pysa can perform OS credential dumping using Mimikatz.","[S0002] Mimikatz: Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSASS Memory.","[G0034] Sandworm Team: Sandworm Team has used its plainpwd tool, a modified version of Mimikatz, and comsvcs.dll to dump Windows credentials from system memory.","[G1036] Moonstone Sleet: Moonstone Sleet retrieved credentials from LSASS memory.","[G0069] MuddyWater: MuddyWater has performed credential dumping with Mimikatz and procdump64.exe.","[G0102] Wizard Spider: Wizard Spider has dumped the lsass.exe memory to harvest credentials with the use of open-source tool LaZagne.","[G0143] Aquatic Panda: Aquatic Panda has attempted to harvest credentials through LSASS memory dumping.","[G0004] Ke3chang: Ke3chang has dumped credentials, including by using Mimikatz.","[G0022] APT3: APT3 has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument \"dig.\"","[G0096] APT41: APT41 has used hashdump, Mimikatz, Procdump, and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.","[S0363] Empire: Empire contains an implementation of Mimikatz to gather credentials from memory.","[S0187] Daserf: Daserf leverages Mimikatz and Windows Credential Editor to steal credentials.","[G0037] FIN6: FIN6 has used Windows Credential Editor for credential dumping.","[G1003] Ember Bear: Ember Bear uses legitimate Sysinternals tools such as procdump to dump LSASS memory.","[S1060] Mafalda: Mafalda can dump password hashes from `LSASS.exe`.","[G0007] APT28: APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims. They have also dumped the LSASS process memory using the MiniDump function.","[S0633] Sliver: Sliver has a built-in `procdump` command allowing for retrieval of memory from processes such as `lsass.exe` for credential harvesting.","[S0365] Olympic Destroyer: Olympic Destroyer contains a module that tries to obtain credentials from LSASS, similar to Mimikatz. These credentials are used with PsExec and Windows Management Instrumentation to help the malware propagate itself across a network.","[G0094] Kimsuky: Kimsuky has gathered credentials using Mimikatz and ProcDump.","[G1040] Play: Play has used Mimikatz and the Windows Task Manager to dump LSASS process memory.","[G1039] RedCurl: RedCurl used LaZagne to obtain passwords from memory.","[S0439] Okrum: Okrum was seen using MimikatzLite to perform credential dumping.","[S0194] PowerSploit: PowerSploit contains a collection of Exfiltration modules that can harvest credentials using Mimikatz.","[C0032] C0032: During the C0032 campaign, TEMP.Veles used Mimikatz and a custom tool, SecHack, to harvest credentials.","[S0342] GreyEnergy: GreyEnergy has a module for Mimikatz to collect Windows credentials from the victim’s machine."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.002","technique_name":"OS Credential Dumping: Security Account Manager","description":"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access. A number of tools can be used to retrieve the SAM file through in-memory techniques: * pwdumpx.exe * gsecdump * Mimikatz * secretsdump.py Alternatively, the SAM can be extracted from the Registry with Reg: * reg save HKLM\\sam sam * reg save HKLM\\system system Creddump7 can then be used to process the SAM database locally to retrieve hashes. Notes: * RID 500 account is the local, built-in administrator. * RID 501 is the guest account. * User accounts start with a RID of 1,000+.","detection":"Hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well.","procedures":["[G1034] Daggerfly: Daggerfly used Reg to dump the Security Account Manager (SAM) hive from victim machines for follow-on credential extraction.","[S0488] CrackMapExec: CrackMapExec can dump usernames and hashed passwords from the SAM.","[S0008] gsecdump: gsecdump can dump Windows password hashes from the SAM.","[G0093] GALLIUM: GALLIUM used reg commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.","[C0041] FrostyGoop Incident: During FrostyGoop Incident, the adversary retrieved the contents of the Security Account Manager (SAM) hive in the victim environment for credential capture.","[G0016] APT29: APT29 has used the `reg save` command to save registry hives.","[S0250] Koadic: Koadic can gather hashed passwords by dumping SAM/SECURITY hive.","[G1016] FIN13: FIN13 has extracted the SAM and SYSTEM registry hives using the `reg.exe` binary for obtaining password hashes from a compromised machine.","[C0017] C0017: During C0017, APT41 copied the `SAM` and `SYSTEM` Registry hives for credential harvesting.","[S0006] pwdump: pwdump can be used to dump credentials from the SAM.","[G0035] Dragonfly: Dragonfly has dropped and executed SecretsDump to dump password hashes.","[G0004] Ke3chang: Ke3chang has dumped credentials, including by using gsecdump.","[S0376] HOPLIGHT: HOPLIGHT has the capability to harvest credentials and passwords from the SAM database.","[G1030] Agrius: Agrius dumped the SAM file on victim machines to capture credentials.","[C0002] Night Dragon: During Night Dragon, threat actors dumped account hashes using gsecdump.","[S0002] Mimikatz: Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the SAM table.","[G0096] APT41: APT41 extracted user account data from the Security Account Managerr (SAM), making a copy of this database from the registry using the reg save command or by exploiting volume shadow copies.","[S0125] Remsec: Remsec can dump the SAM database.","[G1023] APT5: APT5 has copied and exfiltrated the SAM Registry hive from targeted systems.","[G0045] menuPass: menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.","[S0046] CozyCar: Password stealer and NTLM stealer modules in CozyCar harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication.","[G0027] Threat Group-3390: Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.","[C0051] APT28 Nearest Neighbor Campaign: During APT28 Nearest Neighbor Campaign, APT28 used the following commands to dump SAM, SYSTEM, and SECURITY hives: reg save hklm\\sam, reg save hklm\\system, and reg save hklm\\security.","[S0080] Mivast: Mivast has the capability to gather NTLM password information.","[S0357] Impacket: SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.","[C0012] Operation CuckooBees: During Operation CuckooBees, the threat actors leveraged a custom tool to dump OS credentials and used following commands: `reg save HKLM\\\\SYSTEM system.hiv`, `reg save HKLM\\\\SAM sam.hiv`, and `reg save HKLM\\\\SECURITY security.hiv`, to dump SAM, SYSTEM and SECURITY hives.","[S0371] POWERTON: POWERTON has the ability to dump password hashes.","[G0102] Wizard Spider: Wizard Spider has acquired credentials from the SAM/SECURITY registry hives.","[S0050] CosmicDuke: CosmicDuke collects Windows account hashes.","[S0154] Cobalt Strike: Cobalt Strike can recover hashed passwords.","[S1022] IceApple: IceApple's Credential Dumper module can dump encrypted password hashes from SAM registry keys, including `HKLM\\SAM\\SAM\\Domains\\Account\\F` and `HKLM\\SAM\\SAM\\Domains\\Account\\Users\\*\\V`.","[G1003] Ember Bear: Ember Bear acquires victim credentials by extracting registry hives such as the Security Account Manager through commands such as reg save.","[S0120] Fgdump: Fgdump can dump Windows password hashes."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.003","technique_name":"OS Credential Dumping: NTDS","description":"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information. The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes. * Volume Shadow Copy * secretsdump.py * Using the in-built Windows tool, ntdsutil.exe * Invoke-NinjaCopy","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.","procedures":["[G0007] APT28: APT28 has used the ntdsutil.exe utility to export the Active Directory database for credential access.","[C0051] APT28 Nearest Neighbor Campaign: During APT28 Nearest Neighbor Campaign, APT28 dumped NTDS.dit through creating volume shadow copies via vssadmin.","[C0048] Operation MidnightEclipse: During Operation MidnightEclipse, threat actors obtained active directory credentials via the NTDS.DIT file.","[S0488] CrackMapExec: CrackMapExec can dump hashed passwords associated with Active Directory using Windows' Directory Replication Services API (DRSUAPI), or Volume Shadow Copy.","[G1015] Scattered Spider: Scattered Spider has extracted the `NTDS.dit` file by creating volume shadow copies of virtual domain controller disks.","[G0034] Sandworm Team: Sandworm Team has used `ntdsutil.exe` to back up the Active Directory database, likely for credential access.","[G1016] FIN13: FIN13 has harvested the NTDS.DIT file and leveraged the Impacket tool on the compromised domain controller to locally decrypt it.","[S0404] esentutl: esentutl can copy `ntds.dit` using the Volume Shadow Copy service.","[G0037] FIN6: FIN6 has used Metasploit’s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database.","[G1017] Volt Typhoon: Volt Typhoon has used ntds.util to create domain controller installation media containing usernames and password hashes.","[G0045] menuPass: menuPass has used Ntdsutil to dump credentials.","[G0114] Chimera: Chimera has gathered the SYSTEM registry and ntds.dit files from target systems. Chimera specifically has used the NtdsAudit tool to dump the password hashes of domain users via msadcs.exe \"NTDS.dit\" -s \"SYSTEM\" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv and used ntdsutil to copy the Active Directory database.","[S0357] Impacket: SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information from NTDS.dit.","[G0117] Fox Kitten: Fox Kitten has used Volume Shadow Copy to access credential information from NTDS.","[C0029] Cutting Edge: During Cutting Edge, threat actors accessed and mounted virtual hard disk backups to extract ntds.dit.","[G0102] Wizard Spider: Wizard Spider has gained access to credentials via exported copies of the ntds.dit Active Directory database. Wizard Spider has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil.","[G0035] Dragonfly: Dragonfly has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.","[S0250] Koadic: Koadic can gather hashed passwords by gathering domain controller hashes from NTDS.","[G0096] APT41: APT41 used ntdsutil to obtain a copy of the victim environment ntds.dit file.","[G0129] Mustang Panda: Mustang Panda has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file. Mustang Panda has also used reg save on the SYSTEM file Registry location to help extract the NTDS.dit file.","[G0004] Ke3chang: Ke3chang has used NTDSDump and other password dumping tools to gather credentials.","[G0125] HAFNIUM: HAFNIUM has stolen copies of the Active Directory database (NTDS.DIT).","[G1004] LAPSUS$: LAPSUS$ has used Windows built-in tool `ntdsutil` to extract the Active Directory (AD) database."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.004","technique_name":"OS Credential Dumping: LSA Secrets","description":"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets. LSA secrets can also be dumped from memory. Reg can be used to extract from the Registry. Mimikatz can be used to extract secrets from memory.","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.","procedures":["[G0069] MuddyWater: MuddyWater has performed credential dumping with LaZagne.","[S1022] IceApple: IceApple's Credential Dumper module can dump LSA secrets from registry keys, including: `HKLM\\SECURITY\\Policy\\PolEKList\\default`, `HKLM\\SECURITY\\Policy\\Secrets\\*\\CurrVal`, and `HKLM\\SECURITY\\Policy\\Secrets\\*\\OldVal`.","[S0050] CosmicDuke: CosmicDuke collects LSA secrets.","[S0008] gsecdump: gsecdump can dump LSA secrets.","[S0349] LaZagne: LaZagne can perform credential dumping from LSA secrets to obtain account and password information.","[G0027] Threat Group-3390: Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.","[G0049] OilRig: OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.","[S0488] CrackMapExec: CrackMapExec can dump hashed passwords from LSA secrets for the targeted system.","[G0077] Leafminer: Leafminer used several tools for retrieving login and password information, including LaZagne.","[G0064] APT33: APT33 has used a variety of publicly available tools like LaZagne to gather credentials.","[G0016] APT29: APT29 has used the `reg save` command to extract LSA secrets offline.","[G0045] menuPass: menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.","[G0035] Dragonfly: Dragonfly has dropped and executed SecretsDump to dump password hashes.","[S0677] AADInternals: AADInternals can dump secrets from the Local Security Authority.","[S0357] Impacket: SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.","[S0192] Pupy: Pupy can use Lazagne for harvesting credentials.","[G1003] Ember Bear: Ember Bear has used frameworks such as Impacket to dump LSA secrets for credential capture.","[G0004] Ke3chang: Ke3chang has dumped credentials, including by using gsecdump.","[S0002] Mimikatz: Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSA."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.005","technique_name":"OS Credential Dumping: Cached Domain Credentials","description":"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable. On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash. The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires Password Cracking to recover the plaintext password. On Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.[domain].ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use Password Cracking to obtain the plaintext password. With SYSTEM or sudo access, the tools/utilities such as Mimikatz, Reg, and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials. Note: Cached credentials for Windows Vista are derived using PBKDF2.","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis. Detection of compromised Valid Accounts in-use by adversaries may help as well.","procedures":["[S0439] Okrum: Okrum was seen using modified Quarks PwDump to perform credential dumping.","[G0064] APT33: APT33 has used a variety of publicly available tools like LaZagne to gather credentials.","[G0077] Leafminer: Leafminer used several tools for retrieving login and password information, including LaZagne.","[S0119] Cachedump: Cachedump can extract cached password hashes from cache entry information.","[S0349] LaZagne: LaZagne can perform credential dumping from MSCache to obtain account and password information.","[G0049] OilRig: OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.","[S0192] Pupy: Pupy can use Lazagne for harvesting credentials.","[G0069] MuddyWater: MuddyWater has performed credential dumping with LaZagne."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.006","technique_name":"OS Credential Dumping: DCSync","description":"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync. Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket or change an account's password as noted in Account Manipulation. DCSync functionality has been included in the \"lsadump\" module in Mimikatz. Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.","detection":"Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. Also monitor for network protocols and other replication requests from IPs not associated with known domain controllers. Note: Domain controllers may not log replication requests originating from the default domain controller account.","procedures":["[S0002] Mimikatz: Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DCSync/NetSync.","[G1006] Earth Lusca: Earth Lusca has used a DCSync command with Mimikatz to retrieve credentials from an exploited controller.","[C0027] C0027: During C0027, Scattered Spider performed domain replication.","[C0014] Operation Wocao: During Operation Wocao, threat actors used Mimikatz's DCSync to dump credentials from the memory of the targeted system.","[G1004] LAPSUS$: LAPSUS$ has used DCSync attacks to gather credentials for privilege escalation routines.","[C0024] SolarWinds Compromise: During the SolarWinds Compromise, APT29 used privileged accounts to replicate directory service data with domain controllers."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.007","technique_name":"OS Credential Dumping: Proc Filesystem","description":"Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc//maps` file shows how memory is mapped within the process’s virtual address space. And `/proc//mem`, exposed for debugging purposes, provides access to the process’s virtual address space. When executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1, to look for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory. If running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.","detection":"To obtain the passwords and hashes stored in memory, processes must open a maps file in the `/proc` filesystem for the process being analyzed. This file is stored under the path `/proc/PID/maps`, where the `PID` directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.","procedures":["[S1109] PACEMAKER: PACEMAKER has the ability to extract credentials from OS memory.","[S0349] LaZagne: LaZagne can use the `/maps` and `/mem` files to identify regex patterns to dump cleartext passwords from the browser's process memory.","[S0179] MimiPenguin: MimiPenguin can use the `/maps` and `/mem` file to search for regex patterns and dump the process memory."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1003.008","technique_name":"OS Credential Dumping: /etc/passwd and /etc/shadow","description":"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Most modern Linux operating systems use a combination of /etc/passwd and /etc/shadow to store user account information, including password hashes in /etc/shadow. By default, /etc/shadow is only readable by the root user. Linux stores user information such as user ID, group ID, home directory path, and login shell in /etc/passwd. A \"user\" on the system may belong to a person or a service. All password hashes are stored in /etc/shadow - including entries for users with no passwords and users with locked or disabled accounts. Adversaries may attempt to read or dump the /etc/passwd and /etc/shadow files on Linux systems via command line utilities such as the cat command. Additionally, the Linux utility unshadow can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper - for example, via the command /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db. Since the user information stored in /etc/passwd are linked to the password hashes in /etc/shadow, an adversary would need to have access to both.","detection":"The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access /etc/passwd and /etc/shadow, alerting on the pid, process name, and arguments of such programs.","procedures":["[S0349] LaZagne: LaZagne can obtain credential information from /etc/shadow using the shadow.py module.","[C0045] ShadowRay: During ShadowRay, threat actors used `cat /etc/shadow` to steal password hashes."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1040","technique_name":"Network Sniffing","description":"Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data. Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as LLMNR/NBT-NS Poisoning and SMB Relay, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary. Network sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities. Adversaries may likely also utilize network sniffing during Adversary-in-the-Middle (AiTM) to passively gain additional knowledge about the environment. In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to. Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic. The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic. On network devices, adversaries may perform network captures using Network Device CLI commands such as `monitor capture`.","detection":"Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a Adversary-in-the-Middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes. In cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic.","procedures":["[G0034] Sandworm Team: Sandworm Team has used intercepter-NG to sniff passwords in network traffic.","[G0094] Kimsuky: Kimsuky has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols.","[S0357] Impacket: Impacket can be used to sniff network traffic via an interface or raw socket.","[S0590] NBTscan: NBTscan can dump and print whole packet content.","[S0443] MESSAGETAP: MESSAGETAP uses the libpcap library to listen to all traffic and parses network protocols starting with Ethernet and IP layers. It continues parsing protocol layers including SCTP, SCCP, and TCAP and finally extracts SMS message data and routing metadata.","[S1206] JumbledPath: JumbledPath has the ability to perform packet capture on remote devices via actor-defined jump-hosts.","[G1047] Velvet Ant: Velvet Ant has used a custom tool, \"VELVETTAP\", to perform packet capture from compromised F5 BIG-IP devices.","[G1045] Salt Typhoon: Salt Typhoon has used a variety of tools and techniques to capture packet data between network interfaces.","[C0028] 2015 Ukraine Electric Power Attack: During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems.","[S0587] Penquin: Penquin can sniff network traffic to look for packets matching specific conditions.","[S0661] FoggyWeb: FoggyWeb can configure custom listeners to passively monitor all incoming HTTP GET and POST requests sent to the AD FS server from the intranet/internet and intercept HTTP requests that match the custom URI patterns defined by the actor.","[S0363] Empire: Empire can be used to conduct packet captures on target hosts.","[S0174] Responder: Responder captures hashes and credentials that are sent to the system after the name services have been poisoned.","[S0367] Emotet: Emotet has been observed to hook network APIs to monitor network traffic.","[C0046] ArcaneDoor: ArcaneDoor included network packet capture and sniffing for data collection in victim environments.","[G0064] APT33: APT33 has used SniffPass to collect credentials by sniffing network traffic.","[S1204] cd00r: cd00r can use the libpcap library to monitor captured packets for specifc sequences.","[S1186] Line Dancer: Line Dancer can create and exfiltrate packet captures from compromised environments.","[G0105] DarkVishnya: DarkVishnya used network sniffing to obtain login data.","[G0007] APT28: APT28 deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials. APT28 close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials.","[S1203] J-magic: J-magic has a pcap listener function that can create an Extended Berkley Packet Filter (eBPF) on designated interfaces and ports.","[S0378] PoshC2: PoshC2 contains a module for taking packet captures on compromised hosts.","[S1154] VersaMem: VersaMem hooked the Catalina application filter chain `doFilter` on compromised systems to monitor all inbound requests to the local Tomcat web server, inspecting them for parameters like passwords and follow-on Java modules.","[S0019] Regin: Regin appears to have functionality to sniff for credentials passed over HTTP, SMTP, and SMB."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1056.001","technique_name":"Input Capture: Keylogging","description":"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems. Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include: * Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data. * Reading raw keystroke data from the hardware buffer. * Windows Registry modifications. * Custom drivers. * Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.","detection":"Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`. Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.","procedures":["[G0059] Magic Hound: Magic Hound malware is capable of keylogging.","[C0014] Operation Wocao: During Operation Wocao, threat actors obtained the password for the victim's password manager via a custom keylogger.","[S0021] Derusbi: Derusbi is capable of logging keystrokes.","[S1012] PowerLess: PowerLess can use a module to log keystrokes.","[S0643] Peppy: Peppy can log keystrokes on compromised hosts.","[S0670] WarzoneRAT: WarzoneRAT has the capability to install a live and offline keylogger, including through the use of the `GetAsyncKeyState` Windows API.","[S0038] Duqu: Duqu can track key presses with a keylogger module.","[S0283] jRAT: jRAT has the capability to log keystrokes from the victim’s machine, both offline and online.","[S0455] Metamorfo: Metamorfo has a command to launch a keylogger and capture keystrokes on the victim’s machine.","[S0045] ADVSTORESHELL: ADVSTORESHELL can perform keylogging.","[S1146] MgBot: MgBot includes keylogger payloads focused on the QQ chat application.","[G0087] APT39: APT39 has used tools for capturing keystrokes.","[S0149] MoonWind: MoonWind has a keylogger.","[S0152] EvilGrab: EvilGrab has the capability to capture keystrokes.","[S0161] XAgentOSX: XAgentOSX contains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure.","[S0363] Empire: Empire includes keylogging capabilities for Windows, Linux, and macOS systems.","[S0339] Micropsia: Micropsia has keylogging capabilities.","[S0113] Prikormka: Prikormka contains a keylogger module that collects keystrokes and the titles of foreground windows.","[G0082] APT38: APT38 used a Trojan called KEYLIME to capture keystrokes from the victim’s machine.","[S0410] Fysbis: Fysbis can perform keylogging.","[S0194] PowerSploit: PowerSploit's Get-Keystrokes Exfiltration module can log keystrokes.","[S0379] Revenge RAT: Revenge RAT has a plugin for keylogging.","[G1017] Volt Typhoon: Volt Typhoon has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution.","[S0167] Matryoshka: Matryoshka is capable of keylogging.","[G0130] Ajax Security Team: Ajax Security Team has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.","[S0381] FlawedAmmyy: FlawedAmmyy can collect keyboard events.","[S0148] RTM: RTM can record keystrokes from both the keyboard and virtual keyboard.","[S0454] Cadelspy: Cadelspy has the ability to log keystrokes on the compromised host.","[S0567] Dtrack: Dtrack’s dropper contains a keylogging executable.","[S0434] Imminent Monitor: Imminent Monitor has a keylogging module.","[S0261] Catchamas: Catchamas collects keystrokes from the victim’s machine.","[S0154] Cobalt Strike: Cobalt Strike can track key presses with a keylogger module.","[S0033] NetTraveler: NetTraveler contains a keylogger.","[G0007] APT28: APT28 has used tools to perform keylogging.","[S0262] QuasarRAT: QuasarRAT has a built-in keylogger.","[S0125] Remsec: Remsec contains a keylogger component.","[S1159] DUSTTRAP: DUSTTRAP can perform keylogging operations.","[S0072] OwaAuth: OwaAuth captures and DES-encrypts credentials before writing the username and password to a log file, C:\\log.txt.","[S0234] Bandook: Bandook contains keylogging capabilities.","[S0240] ROKRAT: ROKRAT can use `SetWindowsHookEx` and `GetKeyNameText` to capture keystrokes.","[G0012] Darkhotel: Darkhotel has used a keylogger.","[S0019] Regin: Regin contains a keylogger.","[S0013] PlugX: PlugX has a module for capturing keystrokes per process including window titles.","[S0533] SLOTHFULMEDIA: SLOTHFULMEDIA has a keylogging capability.","[S0414] BabyShark: BabyShark has a PowerShell-based remote administration ability that can implement a PowerShell or C# based keylogger.","[S0257] VERMIN: VERMIN collects keystrokes from the victim machine.","[S0128] BADNEWS: When it first starts, BADNEWS spawns a new thread to log keystrokes.","[S0012] PoisonIvy: PoisonIvy contains a keylogger.","[S0652] MarkiRAT: MarkiRAT can capture all keystrokes on a compromised host.","[S0595] ThiefQuest: ThiefQuest uses the CGEventTap functions to perform keylogging.","[S0348] Cardinal RAT: Cardinal RAT can log keystrokes.","[S0375] Remexi: Remexi gathers and exfiltrates keystrokes from the machine.","[S0260] InvisiMole: InvisiMole can capture keystrokes on a compromised host.","[S0213] DOGCALL: DOGCALL is capable of logging keystrokes.","[S0253] RunningRAT: RunningRAT captures keystrokes and sends them back to the C2 server.","[S0569] Explosive: Explosive has leveraged its keylogging capabilities to gain access to administrator accounts on target servers.","[G0045] menuPass: menuPass has used key loggers to steal usernames and passwords.","[S0622] AppleSeed: AppleSeed can use GetKeyState and GetKeyboardState to capture keystrokes on the victim’s machine.","[S1207] XLoader: XLoader can capture keystrokes from the victim machine.","[S0115] Crimson: Crimson can use a module to perform keylogging on compromised hosts.","[S0062] DustySky: DustySky contains a keylogger.","[S0378] PoshC2: PoshC2 has modules for keystroke logging and capturing credentials from spoofed Outlook authentication messages.","[S1050] PcShare: PcShare has the ability to capture keystrokes.","[G1023] APT5: APT5 has used malware with keylogging capabilities to monitor the communications of targeted entities.","[G0131] Tonto Team: Tonto Team has used keylogging tools in their operations.","[S0337] BadPatch: BadPatch has a keylogging capability.","[S0447] Lokibot: Lokibot has the ability to capture input on the compromised host via keylogging.","[S0625] Cuba: Cuba logs keystrokes via polling by using GetKeyState and VkKeyScan functions.","[S0662] RCSession: RCSession has the ability to capture keystrokes on a compromised host.","[S0387] KeyBoy: KeyBoy installs a keylogger for intercepting credentials and keystrokes.","[S1122] Mispadu: Mispadu can log keystrokes on the victim's machine.","[S0170] Helminth: The executable version of Helminth has a module to log keystrokes.","[G0027] Threat Group-3390: Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers. Threat Group-3390 also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.","[S0050] CosmicDuke: CosmicDuke uses a keylogger.","[S0373] Astaroth: Astaroth logs keystrokes from the victim's machine.","[S0649] SMOKEDHAM: SMOKEDHAM can continuously capture keystrokes.","[S0094] Trojan.Karagany: Trojan.Karagany can capture keystrokes on a compromised host.","[S0201] JPIN: JPIN contains a custom keylogger.","[S0018] Sykipot: Sykipot contains keylogging functionality to steal passwords.","[S1111] DarkGate: DarkGate will spawn a thread on execution to capture all keyboard events and write them to a predefined log file.","[S1044] FunnyDream: The FunnyDream Keyrecord component can capture keystrokes.","[S1066] DarkTortilla: DarkTortilla can download a keylogging module.","[S0437] Kivars: Kivars has the ability to initiate keylogging on the infected host.","[G0032] Lazarus Group: Lazarus Group malware KiloAlfa contains keylogging functionality.","[S0531] Grandoreiro: Grandoreiro can log keystrokes on the victim's machine.","[S0192] Pupy: Pupy uses a keylogger to capture keystrokes it then sends back to the server after it is stopped.","[S0030] Carbanak: Carbanak logs key strokes for configured processes and sends them back to the C2 server.","[G0043] Group5: Malware used by Group5 is capable of capturing keystrokes.","[S0338] Cobian RAT: Cobian RAT has a feature to perform keylogging on the victim’s machine.","[S0331] Agent Tesla: Agent Tesla can log keystrokes on the victim’s machine.","[G0068] PLATINUM: PLATINUM has used several different keyloggers.","[G0085] FIN4: FIN4 has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.","[S0058] SslMM: SslMM creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.","[S0023] CHOPSTICK: CHOPSTICK is capable of performing keylogging.","[S1090] NightClub: NightClub can use a plugin for keylogging.","[G0034] Sandworm Team: Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function.","[S0660] Clambling: Clambling can capture keystrokes on a compromised host.","[S1149] CHIMNEYSWEEP: CHIMNEYSWEEP has the ability to support keylogging.","[S0247] NavRAT: NavRAT logs the keystrokes on the targeted system.","[S0385] njRAT: njRAT is capable of logging keystrokes.","[S0336] NanoCore: NanoCore can perform keylogging on the victim’s machine.","[S0279] Proton: Proton uses a keylogger to capture keystrokes.","[S0409] Machete: Machete logs keystrokes from the victim’s machine.","[G0094] Kimsuky: Kimsuky has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.","[G0049] OilRig: OilRig has employed keyloggers including KEYPUNCH and LONGWATCH.","[S0438] Attor: One of Attor's plugins can collect user credentials via capturing keystrokes and can capture keystrokes pressed within the window of the injected process.","[G1044] APT42: APT42 has used custom malware to log keystrokes.","[S0070] HTTPBrowser: HTTPBrowser is capable of capturing keystrokes on victims.","[G0054] Sowbug: Sowbug has used keylogging tools.","[S0248] yty: yty uses a keylogger plugin to gather keystrokes.","[S1016] MacMa: MacMa can use Core Graphics Event Taps to intercept user keystrokes from any text input field and saves them to text files. Text input fields include Spotlight, Finder, Safari, Mail, Messages, and other apps that have text fields for passwords.","[S0089] BlackEnergy: BlackEnergy has run a keylogger plug-in on a victim.","[S0593] ECCENTRICBANDWAGON: ECCENTRICBANDWAGON can capture and store keystrokes.","[S0032] gh0st RAT: gh0st RAT has a keylogger.","[S0076] FakeM: FakeM contains a keylogger module.","[S0198] NETWIRE: NETWIRE can perform keylogging.","[S0332] Remcos: Remcos has a command for keylogging.","[S0650] QakBot: QakBot can capture keystrokes on a compromised host.","[S0342] GreyEnergy: GreyEnergy has a module to harvest pressed keystrokes.","[G1001] HEXANE: HEXANE has used a PowerShell-based keylogger named `kl.ps1`.","[C0028] 2015 Ukraine Electric Power Attack: During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin.","[S0187] Daserf: Daserf can log keystrokes.","[S0004] TinyZBot: TinyZBot contains keylogger functionality.","[S0439] Okrum: Okrum was seen using a keylogger tool to capture keystrokes.","[S0334] DarkComet: DarkComet has a keylogging capability.","[G0050] APT32: APT32 has abused the PasswordChangeNotify to monitor for and capture account password changes.","[C0029] Cutting Edge: During Cutting Edge, threat actors modified a JavaScript file on the Web SSL VPN component of Ivanti Connect Secure devices to keylog credentials.","[S0673] DarkWatchman: DarkWatchman can track key presses with a keylogger module.","[S0330] Zeus Panda: Zeus Panda can perform keylogging on the victim’s machine by hooking the functions TranslateMessage and WM_KEYDOWN.","[S0017] BISCUIT: BISCUIT can capture keystrokes.","[S1059] metaMain: metaMain has the ability to log keyboard events.","[S0088] Kasidet: Kasidet has the ability to initiate keylogging.","[S0282] MacSpy: MacSpy captures keystrokes.","[S0692] SILENTTRINITY: SILENTTRINITY has a keylogging capability.","[S0356] KONNI: KONNI has the capability to perform keylogging.","[S0526] KGH_SPY: KGH_SPY can perform keylogging by polling the GetAsyncKeyState() function.","[S0130] Unknown Logger: Unknown Logger is capable of recording keystrokes.","[G0022] APT3: APT3 has used a keylogging tool that records keystrokes in encrypted files.","[S0467] TajMahal: TajMahal has the ability to capture keystrokes on an infected host.","[G1016] FIN13: FIN13 has logged the keystrokes of victims to escalate privileges.","[S0412] ZxShell: ZxShell has a feature to capture a remote computer's keystrokes using a keylogger.","[G0004] Ke3chang: Ke3chang has used keyloggers.","[S0090] Rover: Rover has keylogging functionality.","[G0096] APT41: APT41 used a keylogger called GEARSHIFT on a target system.","[S1087] AsyncRAT: AsyncRAT can capture keystrokes on the victim’s machine.","[S0428] PoetRAT: PoetRAT has used a Python tool named klog.exe for keylogging."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1056.002","technique_name":"Input Capture: GUI Input Capture","description":"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Account Control). Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite. This type of prompt can be used to collect credentials via various languages such as AppleScript and PowerShell. On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. Unix Shell). Adversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., Browser Information Discovery and/or Application Window Discovery) to spoof prompts when users are naturally accessing sensitive sites/data.","detection":"Monitor process execution for unusual programs as well as malicious instances of Command and Scripting Interpreter that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious. Inspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.","procedures":["[S0279] Proton: Proton prompts users for their credentials.","[S0278] iKitten: iKitten prompts the user for their credentials.","[S0455] Metamorfo: Metamorfo has displayed fake forms on top of banking sites to intercept credentials from victims.","[S0274] Calisto: Calisto presents an input prompt asking for the user's login and password.","[S0276] Keydnap: Keydnap prompts the users for credentials.","[G1039] RedCurl: RedCurl prompts the user for credentials through a Microsoft Outlook pop-up.","[S0482] Bundlore: Bundlore prompts the user for their credentials.","[G0085] FIN4: FIN4 has presented victims with spoofed Windows Authentication prompts to collect their credentials.","[S0281] Dok: Dok prompts the user for credentials.","[S1122] Mispadu: Mispadu can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.","[S0658] XCSSET: XCSSET prompts the user to input credentials using a native macOS dialog box leveraging the system process /Applications/Safari.app/Contents/MacOS/SafariForWebKitDevelopment.","[S0692] SILENTTRINITY: SILENTTRINITY's `credphisher.py` module can prompt a current user for their credentials.","[S1153] Cuckoo Stealer: Cuckoo Stealer has captured passwords by prompting victims with a “macOS needs to access System Settings” GUI window."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1056.003","technique_name":"Input Capture: Web Portal Capture","description":"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service. This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through External Remote Services and Valid Accounts or as part of the initial compromise by exploitation of the externally facing web service.","detection":"File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.","procedures":["[G1035] Winter Vivern: Winter Vivern registered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information.","[C0030] Triton Safety Instrumented System Attack: In the Triton Safety Instrumented System Attack, TEMP.Veles captured credentials as they were being changed by redirecting text-based login codes to websites they controlled.","[S1116] WARPWIRE: WARPWIRE can capture credentials submitted during the web logon process in order to access layer seven applications such as RDP.","[S1022] IceApple: The IceApple OWA credential logger can monitor for OWA authentication requests and log the credentials.","[C0029] Cutting Edge: During Cutting Edge, threat actors modified the JavaScript loaded by the Ivanti Connect Secure login page to capture credentials entered."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1056.004","technique_name":"Input Capture: Credential API Hooking","description":"Adversaries may hook into Windows application programming interface (API) functions and Linux system functions to collect user credentials. Malicious hooking mechanisms may capture API or function calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. In Windows, hooking involves redirecting calls to these functions and can be implemented via: * **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs. * **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored. * **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow. In Linux and macOS, adversaries may hook into system functions via the `LD_PRELOAD` (Linux) or `DYLD_INSERT_LIBRARIES` (macOS) environment variables, which enables loading shared libraries into a program’s address space. For example, an adversary may capture credentials by hooking into the `libc read` function leveraged by SSH or SCP.","detection":"Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure. Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools or by programmatically examining internal kernel structures. Rootkits detectors can also be used to monitor for various types of hooking activity. Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes to compare the in-memory IAT to the real addresses of the referenced functions.","procedures":["[S0330] Zeus Panda: Zeus Panda hooks processes by leveraging its own IAT hooked functions.","[S1154] VersaMem: VersaMem hooked and overrided Versa's built-in authentication method, `setUserPassword`, to intercept plaintext credentials when submitted to the server.","[S0484] Carberp: Carberp has hooked several Windows API functions to steal credentials.","[S0182] FinFisher: FinFisher hooks processes by modifying IAT pointers to CreateWindowEx.","[S0386] Ursnif: Ursnif has hooked APIs to perform a wide variety of information theft, such as monitoring traffic from browsers.","[S0412] ZxShell: ZxShell hooks several API functions to spawn system threads.","[G0068] PLATINUM: PLATINUM is capable of using Windows hook interfaces for information gathering such as credential access.","[S0251] Zebrocy: Zebrocy installs an application-defined Windows hook to get notified when a network drive has been attached, so it can then use the hook to call its RecordToFile file stealing method.","[S0416] RDFSNIFFER: RDFSNIFFER hooks several Win32 API functions to hijack elements of the remote system management user-interface.","[S0363] Empire: Empire contains some modules that leverage API hooking to carry out tasks, such as netripper.","[S0266] TrickBot: TrickBot has the ability to capture RDP credentials by capturing the CredEnumerateA API","[S0353] NOKKI: NOKKI uses the Windows call SetWindowsHookEx and begins injecting it into every GUI process running on the victim's machine."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1110.001","technique_name":"Brute Force: Password Guessing","description":"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts. Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following: * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP) * SNMP (161/UDP and 162/TCP/UDP) In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.. Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols. In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","detection":"Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","procedures":["[S0020] China Chopper: China Chopper's server component can perform brute force password guessing against authentication portals.","[S0367] Emotet: Emotet has been observed using a hard coded list of passwords to brute force user accounts.","[S0374] SpeakUp: SpeakUp can perform brute forcing using a pre-defined list of usernames and passwords in an attempt to log in to administrative panels.","[G0007] APT28: APT28 has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days. APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password guessing attacks.","[S0488] CrackMapExec: CrackMapExec can brute force passwords for a specified user on a single target system or across an entire network.","[S0698] HermeticWizard: HermeticWizard can use a list of hardcoded credentials in attempt to authenticate to SMB shares.","[G0016] APT29: APT29 has successfully conducted password guessing attacks against a list of mailboxes.","[S0532] Lucifer: Lucifer has attempted to brute force TCP ports 135 (RPC) and 1433 (MSSQL) with the default username or list of usernames and passwords.","[S0453] Pony: Pony has used a small dictionary of common passwords against a collected list of local accounts.","[S0341] Xbash: Xbash can obtain a list of weak passwords from the C2 server to use for brute forcing as well as attempt to brute force services with open ports.","[S0598] P.A.S. Webshell: P.A.S. Webshell can use predefined users and passwords to execute brute force attacks against SSH, FTP, POP3, MySQL, MSSQL, and PostgreSQL services."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1110.002","technique_name":"Brute Force: Password Cracking","description":"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further, adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.","detection":"It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as OS Credential Dumping or Kerberoasting.","procedures":["[G0022] APT3: APT3 has been known to brute force password hashes to be able to leverage plain text credentials.","[S0056] Net Crawler: Net Crawler uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.","[G0035] Dragonfly: Dragonfly has dropped and executed tools used for password cracking, including Hydra and CrackMapExec.","[G1045] Salt Typhoon: Salt Typhoon has cracked passwords for accounts with weak encryption obtained from the configuration files of compromised network devices.","[G0037] FIN6: FIN6 has extracted password hashes from ntds.dit to crack offline.","[C0002] Night Dragon: During Night Dragon, threat actors used Cain & Abel to crack password hashes."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1110.003","technique_name":"Brute Force: Password Spraying","description":"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following: * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP) In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365. In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","detection":"Monitor authentication logs for system and application login failures of Valid Accounts. Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. Consider the following event IDs: * Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625. * Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771. * All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.","procedures":["[G0125] HAFNIUM: HAFNIUM has gained initial access through password spray attacks.","[S0606] Bad Rabbit: Bad Rabbit’s infpub.dat file uses NTLM login credentials to brute force Windows machines.","[S0488] CrackMapExec: CrackMapExec can brute force credential authentication by using a supplied list of usernames and a single password.","[S0362] Linux Rabbit: Linux Rabbit brute forces SSH passwords in order to attempt to gain access and install its malware onto the server.","[C0051] APT28 Nearest Neighbor Campaign: During APT28 Nearest Neighbor Campaign, APT28 performed password-spray attacks against public facing services to validate credentials.","[G1030] Agrius: Agrius engaged in password spraying via SMB in victim environments.","[G1003] Ember Bear: Ember Bear has conducted password spraying against Outlook Web Access (OWA) infrastructure to identify valid user names and passwords.","[G0016] APT29: APT29 has conducted brute force password spray attacks.","[G1001] HEXANE: HEXANE has used password spraying attacks to obtain valid credentials.","[G0032] Lazarus Group: Lazarus Group malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.","[G0064] APT33: APT33 has used password spraying to gain access to target systems.","[G0122] Silent Librarian: Silent Librarian has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets.","[G0114] Chimera: Chimera has used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts.","[S0413] MailSniper: MailSniper can be used for password spraying against Exchange and Office 365.","[G0077] Leafminer: Leafminer used a tool called Total SMB BruteForcer to perform internal password spraying.","[G0007] APT28: APT28 has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks. APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password spray attacks."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1110.004","technique_name":"Brute Force: Credential Stuffing","description":"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts. Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following: * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP) In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.","detection":"Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","procedures":["[G0114] Chimera: Chimera has used credential stuffing against victim's remote services to obtain valid accounts.","[S0266] TrickBot: TrickBot uses brute-force attack against RDP with rdpscanDll module."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1111","technique_name":"Multi-Factor Authentication Interception","description":"Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. If a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. Adversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). Other methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users’ phones.","detection":"Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior. Similar to Input Capture, keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.","procedures":["[S1104] SLOWPULSE: SLOWPULSE can log credentials on compromised Pulse Secure VPNs during the `DSAuth::AceAuthServer::checkUsernamePassword`ACE-2FA authentication procedure.","[S0018] Sykipot: Sykipot is known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.","[C0014] Operation Wocao: During Operation Wocao, threat actors used a custom collection method to intercept two-factor authentication soft tokens.","[G0094] Kimsuky: Kimsuky has used a proprietary tool to intercept one time passwords required for two-factor authentication.","[C0049] Leviathan Australian Intrusions: Leviathan abused compromised appliance access to collect multifactor authentication token values during Leviathan Australian Intrusions.","[G0114] Chimera: Chimera has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.","[G1044] APT42: APT42 has intercepted SMS-based one-time passwords and has set up two-factor authentication. Additionally, APT42 has used cloned or fake websites to capture MFA tokens.","[G1004] LAPSUS$: LAPSUS$ has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1187","technique_name":"Forced Authentication","description":"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept. The Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources. Web Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. Template Injection), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. With access to the credential hash, an adversary can perform off-line Brute Force cracking to gain access to plaintext credentials. There are several different ways this can occur. Some specifics from in-the-wild use include: * A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. Template Injection). The document can include, for example, a request similar to file[:]//[remote address]/Normal.dotm to trigger the SMB request. * A modified .LNK or .SCF file with the icon filename pointing to an external reference such as \\\\[remote address]\\pic.png that will force the system to load the resource when the icon is rendered to repeatedly gather credentials.","detection":"Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located. Monitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered.","procedures":["[G0079] DarkHydrus: DarkHydrus used Template Injection to launch an authentication window for users to enter their credentials.","[G0035] Dragonfly: Dragonfly has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.","[S0634] EnvyScout: EnvyScout can use protocol handlers to coax the operating system to send NTLMv2 authentication responses to attacker-controlled infrastructure."],"tactics":"TA0006 - Credential Access"}
{"technique_id":"T1212","technique_name":"Exploitation for Credential Access","description":"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges. Such exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.","detection":"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.","procedures":["[C0049] Leviathan Australian Intrusions: Leviathan exploited vulnerable network appliances during Leviathan Australian Intrusions, leading to the collection and exfiltration of valid credentials."],"tactics":"TA0006 - Credential Access"}