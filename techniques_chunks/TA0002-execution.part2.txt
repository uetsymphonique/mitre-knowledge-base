{"technique_id":"T1129","technique_name":"Shared Modules","description":"Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API). Adversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective. The Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows Native API which is called from functions like `LoadLibrary` at run time.","detection":"Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to `%SystemRoot%` and `%ProgramFiles%` directories will protect against module loads from unsafe paths. Correlation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.","procedures":["[S0032] gh0st RAT: gh0st RAT can load DLLs into memory.","[S0203] Hydraq: Hydraq creates a backdoor through which remote attackers can load and call DLL functions.","[S0196] PUNCHBUGGY: PUNCHBUGGY can load a DLL using the LoadLibrary API.","[S0603] Stuxnet: Stuxnet calls LoadLibrary then executes exports from a DLL.","[S0373] Astaroth: Astaroth uses the LoadLibraryExW() function to load additional modules.","[S1185] LightSpy: LightSpy's main executable and module `.dylib` binaries are loaded using a combination of `dlopen()` to load the library, `_objc_getClass()` to retrieve the class definition, and `_objec_msgSend()` to invoke/execute the specified method in the loaded class.","[S0607] KillDisk: KillDisk loads and executes functions from a DLL.","[S0455] Metamorfo: Metamorfo had used AutoIt to load and execute the DLL payload.","[S0673] DarkWatchman: DarkWatchman can load DLLs.","[S0438] Attor: Attor's dispatcher can execute additional plugins by loading the respective DLLs.","[S0661] FoggyWeb: FoggyWeb's loader can call the load() function to load the FoggyWeb dll into an Application Domain on a compromised AD FS server.","[S1078] RotaJakiro: RotaJakiro uses dynamically linked shared libraries (`.so` files) to execute additional functionality using `dlopen()` and `dlsym()`.","[S0520] BLINDINGCAN: BLINDINGCAN has loaded and executed DLLs in memory during runtime on a victim machine.","[S1039] Bumblebee: Bumblebee can use `LoadLibrary` to attempt to execute GdiPlus.dll.","[S0467] TajMahal: TajMahal has the ability to inject the LoadLibrary call template DLL into running processes.","[S0377] Ebury: Ebury is executed through hooking the keyutils.so file used by legitimate versions of `OpenSSH` and `libcurl`.","[S0415] BOOSTWRITE: BOOSTWRITE has used the DWriteCreateFactory() function to load additional modules.","[S0567] Dtrack: Dtrack contains a function that calls LoadLibrary and GetProcAddress.","[S0352] OSX_OCEANLOTUS.D: For network communications, OSX_OCEANLOTUS.D loads a dynamic library (`.dylib` file) using `dlopen()` and obtains a function pointer to execute within that shared library using `dlsym()`.","[S0501] PipeMon: PipeMon has used call to LoadLibrary to load its installer. PipeMon loads its modules using reflective loading or custom shellcode.","[S1154] VersaMem: VersaMem relied on the Java Instrumentation API and Javassist to dynamically modify Java code existing in memory."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1203","technique_name":"Exploitation for Client Execution","description":"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility. Several types exist: ### Browser-based Exploitation Web browsers are a common target through Drive-by Compromise and Spearphishing Link. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed. ### Office Applications Common office and productivity applications such as Microsoft Office are also targeted through Phishing. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run. ### Common Third-party Applications Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.","detection":"Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.","procedures":["[G0121] Sidewinder: Sidewinder has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674.","[G1031] Saint Bear: Saint Bear has leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments.","[G0007] APT28: APT28 has exploited Microsoft Office vulnerability CVE-2017-0262 for execution.","[G0027] Threat Group-3390: Threat Group-3390 has exploited CVE-2018-0798 in Equation Editor.","[S0331] Agent Tesla: Agent Tesla has exploited Office vulnerabilities such as CVE-2017-11882 and CVE-2017-8570 for execution during delivery.","[G0034] Sandworm Team: Sandworm Team has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906).","[G0035] Dragonfly: Dragonfly has exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system.","[G0138] Andariel: Andariel has exploited numerous ActiveX vulnerabilities, including zero-days.","[S0239] Bankshot: Bankshot leverages a known zero-day vulnerability in Adobe Flash to execute the implant into the victims’ machines.","[S1154] VersaMem: VersaMem was installed through exploitation of CVE-2024-39717 in Versa Director servers.","[G0089] The White Company: The White Company has taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code.","[G1011] EXOTIC LILY: EXOTIC LILY has used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML.","[G0032] Lazarus Group: Lazarus Group has exploited Adobe Flash vulnerability CVE-2018-4878 for execution.","[G0016] APT29: APT29 has used multiple software exploits for common client software, like Microsoft Word, Exchange, and Adobe Reader, to gain code execution.","[S1207] XLoader: XLoader has exploited Office vulnerabilities during local execution such as CVE-2017-11882 and CVE-2018-0798.","[G0098] BlackTech: BlackTech has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities CVE-2012-0158, CVE-2014-6352, CVE-2017-0199, and Adobe Flash CVE-2015-5119.","[S0396] EvilBunny: EvilBunny has exploited CVE-2011-4369, a vulnerability in the PRC component in Adobe Reader.","[S0341] Xbash: Xbash can attempt to exploit known vulnerabilities in Hadoop, Redis, or ActiveMQ when it finds those services running in order to conduct further execution.","[S0578] SUPERNOVA: SUPERNOVA was installed via exploitation of a SolarWinds Orion API authentication bypass vulnerability (CVE-2020-10148).","[G0142] Confucius: Confucius has exploited Microsoft Office vulnerabilities, including CVE-2015-1641, CVE-2017-11882, and CVE-2018-0802.","[G0040] Patchwork: Patchwork uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, CVE-2017-11882, and CVE-2015-1641.","[G0005] APT12: APT12 has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities (CVE-2009-3129, CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, CVE-2011-0611).","[S0458] Ramsay: Ramsay has been embedded in documents exploiting CVE-2017-0199, CVE-2017-11882, and CVE-2017-8570.","[G0001] Axiom: Axiom has used exploits for multiple vulnerabilities including CVE-2014-0322, CVE-2012-4792, CVE-2012-1889, and CVE-2013-3893.","[G0126] Higaisa: Higaisa has exploited CVE-2018-0798 for execution.","[C0001] Frankenstein: During Frankenstein, the threat actors exploited CVE-2017-11882 to execute code on the victim's machine.","[G0080] Cobalt Group: Cobalt Group had exploited multiple vulnerabilities for execution, including Microsoft’s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, CVE-2017-0199, and CVE-2017-8759.","[S0374] SpeakUp: SpeakUp attempts to exploit the following vulnerabilities in order to execute its malicious script: CVE-2012-0874, CVE-2010-1871, CVE-2017-10271, CVE-2018-2894, CVE-2016-3088, JBoss AS 3/4/5/6, and the Hadoop YARN ResourceManager.","[G0065] Leviathan: Leviathan has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882.","[G0067] APT37: APT37 has used exploits for Flash Player (CVE-2016-4117, CVE-2018-4878), Word (CVE-2017-0199), Internet Explorer (CVE-2020-1380 and CVE-2020-26411), and Microsoft Edge (CVE-2021-26411) for execution.","[G0062] TA459: TA459 has exploited Microsoft Word vulnerability CVE-2017-0199 for execution.","[G0129] Mustang Panda: Mustang Panda has exploited CVE-2017-0199 in Microsoft Word to execute code.","[C0047] RedDelta Modified PlugX Infection Chain Operations: Mustang Panda used the GrimResource exploitation technique via specially crafted MSC files for arbitrary code execution during RedDelta Modified PlugX Infection Chain Operations.","[G0022] APT3: APT3 has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776.","[G0060] BRONZE BUTLER: BRONZE BUTLER has exploited Microsoft Office vulnerabilities CVE-2014-4114, CVE-2018-0802, and CVE-2018-0798 for execution.","[G1041] Sea Turtle: Sea Turtle has used exploits for vulnerabilities such as CVE-2021-44228, CVE-2021-21974, and CVE-2022-0847 to achieve client code execution.","[G0134] Transparent Tribe: Transparent Tribe has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution.","[G0081] Tropic Trooper: Tropic Trooper has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158.","[G0131] Tonto Team: Tonto Team has exploited Microsoft vulnerabilities, including CVE-2018-0798, CVE-2018-8174, CVE-2018-0802, CVE-2017-11882, CVE-2019-9489 CVE-2020-8468, and CVE-2018-0798 to enable execution of their delivered malicious payloads.","[G1007] Aoqin Dragon: Aoqin Dragon has exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems.","[G0100] Inception: Inception has exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution.","[S0391] HAWKBALL: HAWKBALL has exploited Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802 to deliver the payload.","[S0243] DealersChoice: DealersChoice leverages vulnerable versions of Flash to perform execution.","[G0096] APT41: APT41 leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396.","[C0016] Operation Dust Storm: During Operation Dust Storm, the threat actors exploited Adobe Flash vulnerability CVE-2011-0611, Microsoft Windows Help vulnerability CVE-2010-1885, and several Internet Explorer vulnerabilities, including CVE-2011-1255, CVE-2012-1889, and CVE-2014-0322.","[G1003] Ember Bear: Ember Bear has used exploits to enable follow-on execution of frameworks such as Meterpreter.","[G1002] BITTER: BITTER has exploited Microsoft Office vulnerabilities CVE-2012-0158, CVE-2017-11882, CVE-2018-0798, and CVE-2018-0802.","[S1065] Woody RAT: Woody RAT has relied on CVE-2022-30190 (Follina) for execution during delivery.","[S0154] Cobalt Strike: Cobalt Strike can exploit Oracle Java vulnerabilities for execution, including CVE-2011-3544, CVE-2013-2465, CVE-2012-4681, and CVE-2013-2460.","[G0066] Elderwood: Elderwood has used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits.","[G0012] Darkhotel: Darkhotel has exploited Adobe Flash vulnerability CVE-2015-8651 for execution.","[G0050] APT32: APT32 has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882)","[G0049] OilRig: OilRig has exploited CVE-2024-30088 to run arbitrary code in the context of `SYSTEM`.","[G0018] admin@338: admin@338 has exploited client software vulnerabilities for execution, such as Microsoft Word CVE-2012-0158.","[G0064] APT33: APT33 has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).","[G0069] MuddyWater: MuddyWater has exploited the Office vulnerability CVE-2017-0199 for execution.","[S0260] InvisiMole: InvisiMole has installed legitimate but vulnerable Total Video Player software and wdigest.dll library drivers on compromised hosts to exploit stack overflow and input validation vulnerabilities for code execution."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1204.001","technique_name":"User Execution: Malicious Link","description":"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.","detection":"Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization. Anti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.","procedures":["[G0046] FIN7: FIN7 has used malicious links to lure victims into downloading malware.","[G0098] BlackTech: BlackTech has used e-mails with malicious links to lure victims into installing malware.","[S0531] Grandoreiro: Grandoreiro has used malicious links to gain execution on victim machines.","[S0534] Bazar: Bazar can gain execution after a user clicks on a malicious link to decoy landing pages hosted on Google Docs.","[C0002] Night Dragon: During Night Dragon, threat actors enticed users to click on links in spearphishing emails to download malware.","[G0129] Mustang Panda: Mustang Panda has sent malicious links including links directing victims to a Google Drive folder.","[G0021] Molerats: Molerats has sent malicious links via email trick users into opening a RAR archive and running an executable.","[G0112] Windshift: Windshift has used links embedded in e-mails to lure victims into executing malicious code.","[S1017] OutSteel: OutSteel has relied on a user to click a malicious link within a spearphishing email.","[G0094] Kimsuky: Kimsuky has lured victims into clicking malicious links.","[G0140] LazyScripter: LazyScripter has relied upon users clicking on links to malicious files.","[G0142] Confucius: Confucius has lured victims into clicking on a malicious link sent through spearphishing.","[G1031] Saint Bear: Saint Bear has, in addition to email-based phishing attachments, used malicious websites masquerading as legitimate entities to host links to malicious files for user execution.","[C0005] Operation Spalax: During Operation Spalax, the threat actors relied on a victim to click on a malicious link distributed via phishing emails.","[C0016] Operation Dust Storm: During Operation Dust Storm, the threat actors relied on a victim clicking on a malicious link sent via email.","[S0198] NETWIRE: NETWIRE has been executed through convincing victims into clicking malicious links.","[C0022] Operation Dream Job: During Operation Dream Job, Lazarus Group lured users into executing a malicious link to disclose private account information or provide initial access.","[S1030] Squirrelwaffle: Squirrelwaffle has relied on victims to click on a malicious link send via phishing campaigns.","[S0650] QakBot: QakBot has gained execution through users opening malicious links.","[S1160] Latrodectus: Latrodectus has been executed through malicious links distributed in email campaigns.","[S0499] Hancitor: Hancitor has relied upon users clicking on a malicious link delivered through phishing.","[S0528] Javali: Javali has achieved execution through victims clicking links to malicious websites.","[G0082] APT38: APT38 has used links to execute a malicious Visual Basic script.","[C0021] C0021: During C0021, the threat actors lured users into clicking a malicious link which led to the download of a ZIP archive containing a malicious .LNK file.","[C0037] Water Curupira Pikabot Distribution: Water Curupira Pikabot Distribution distributed a PDF attachment containing a malicious link to a Pikabot installer.","[S0649] SMOKEDHAM: SMOKEDHAM has relied upon users clicking on a malicious link delivered through phishing.","[G0061] FIN8: FIN8 has used emails with malicious links to lure victims into installing malware.","[G1018] TA2541: TA2541 has used malicious links to cloud and web services to gain execution on victim machines.","[G0016] APT29: APT29 has used various forms of spearphishing attempting to get a user to click on a malicious link.","[G0040] Patchwork: Patchwork has used spearphishing with links to try to get users to click, download and open malicious files.","[G0022] APT3: APT3 has lured victims into clicking malicious links delivered through spearphishing.","[G0120] Evilnum: Evilnum has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.","[S1086] Snip3: Snip3 has been executed through luring victims into clicking malicious links.","[G0092] TA505: TA505 has used lures to get users to click links in emails and attachments. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files.","[G1014] LuminousMoth: LuminousMoth has lured victims into clicking malicious Dropbox download links delivered through spearphishing.","[S0644] ObliqueRAT: ObliqueRAT has gained execution on targeted systems through luring users to click on links to malicious URLs.","[G0059] Magic Hound: Magic Hound has attempted to lure victims into opening malicious links embedded in emails.","[G0087] APT39: APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious link.","[G0050] APT32: APT32 has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.","[G0103] Mofang: Mofang's spearphishing emails required a user to click the link to connect to a compromised website.","[S1138] Gootloader: Gootloader has been executed through malicious links presented to users as internet search results.","[C0011] C0011: During C0011, Transparent Tribe relied on student targets to click on a malicious link sent via email.","[G0085] FIN4: FIN4 has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).","[G1039] RedCurl: RedCurl has used malicious links to infect the victim machines.","[G0034] Sandworm Team: Sandworm Team has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.","[G0066] Elderwood: Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open links.","[G0010] Turla: Turla has used spearphishing via a link to get users to download and run their malware.","[G1038] TA578: TA578 has placed malicious links in contact forms on victim sites, often spoofing a copyright complaint, to redirect users to malicious file downloads.","[G1034] Daggerfly: Daggerfly has used strategic website compromise to deliver a malicious link requiring user interaction.","[S0367] Emotet: Emotet has relied upon users clicking on a malicious link delivered through spearphishing.","[G0049] OilRig: OilRig has delivered malicious links to achieve execution on the target system.","[G0047] Gamaredon Group: Gamaredon Group has attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content.","[G1011] EXOTIC LILY: EXOTIC LILY has used malicious links to lure users into executing malicious payloads.","[G0080] Cobalt Group: Cobalt Group has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.","[S0453] Pony: Pony has attempted to lure targets into clicking links in spoofed emails from legitimate banks.","[S1124] SocGholish: SocGholish has lured victims into interacting with malicious links on compromised websites for execution.","[S0435] PLEAD: PLEAD has been executed via malicious links in e-mails.","[S0669] KOCTOPUS: KOCTOPUS has relied on victims clicking on a malicious link delivered via email.","[G0128] ZIRCONIUM: ZIRCONIUM has used malicious links in e-mails to lure victims into downloading malware.","[G0134] Transparent Tribe: Transparent Tribe has directed users to open URLs hosting malicious content.","[S0646] SpicyOmelette: SpicyOmelette has been executed through malicious links within spearphishing emails.","[G0069] MuddyWater: MuddyWater has distributed URLs in phishing e-mails that link to lure documents.","[G0102] Wizard Spider: Wizard Spider has lured victims into clicking a malicious link delivered through spearphishing.","[S0561] GuLoader: GuLoader has relied upon users clicking on links to malicious documents.","[G0095] Machete: Machete has has relied on users opening malicious links delivered through spearphishing to execute malware.","[S1039] Bumblebee: Bumblebee has relied upon a user downloading a file from a OneDrive link for execution.","[G1020] Mustard Tempest: Mustard Tempest has lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.","[S0436] TSCookie: TSCookie has been executed via malicious links embedded in e-mails spoofing the Ministries of Education, Culture, Sports, Science and Technology of Japan.","[G0121] Sidewinder: Sidewinder has lured targets to click on malicious links to gain execution in the target environment.","[S0530] Melcoz: Melcoz has gained execution through victims opening malicious links.","[G0007] APT28: APT28 has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.","[G1037] TA577: TA577 has lured users into executing malicious JavaScript files by sending malicious links via email.","[G1035] Winter Vivern: Winter Vivern has mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.","[S0585] Kerrdown: Kerrdown has gained execution through victims opening malicious links.","[S1018] Saint Bot: Saint Bot has relied on users to click on a malicious link delivered via a spearphishing.","[S0475] BackConfig: BackConfig has compromised victims via links to URLs hosting malicious content.","[G0064] APT33: APT33 has lured users to click links to malicious HTML applications delivered via spearphishing emails.","[G0065] Leviathan: Leviathan has sent spearphishing email links attempting to get a user to click.","[C0047] RedDelta Modified PlugX Infection Chain Operations: Mustang Panda distributed hyperlinks that would result in an MSC file running a PowerShell command to download and install a remotely-hosted MSI file during RedDelta Modified PlugX Infection Chain Operations.","[S0584] AppleJeus: AppleJeus's spearphishing links required user interaction to navigate to the malicious website.","[G1006] Earth Lusca: Earth Lusca has sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1204.002","technique_name":"User Execution: Malicious File","description":"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg. Adversaries may employ various forms of Masquerading and Obfuscated Files or Information to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. While Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.","detection":"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads. Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","procedures":["[G1026] Malteiro: Malteiro has relied on users to execute .zip file attachments containing malicious URLs.","[S0669] KOCTOPUS: KOCTOPUS has relied on victims clicking a malicious document for execution.","[C0037] Water Curupira Pikabot Distribution: Water Curupira Pikabot Distribution delivered Pikabot installers as password-protected ZIP files containing heavily obfuscated JavaScript, or IMG files containing an LNK mimicking a Word document and a malicious DLL.","[S0356] KONNI: KONNI has relied on a victim to enable malicious macros within an attachment delivered via email.","[G0005] APT12: APT12 has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.","[S0453] Pony: Pony has attempted to lure targets into downloading an attached executable (ZIP, RAR, or CAB archives) or document (PDF or other MS Office format).","[G0094] Kimsuky: Kimsuky has used attempted to lure victims into opening malicious e-mail attachments.","[G0095] Machete: Machete has relied on users opening malicious attachments delivered through spearphishing to execute malware.","[S0631] Chaes: Chaes requires the user to click on the malicious Word document to execute the next part of the attack.","[S1064] SVCReady: SVCReady has relied on users clicking a malicious attachment delivered through spearphishing.","[G0066] Elderwood: Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.","[G0134] Transparent Tribe: Transparent Tribe has used weaponized documents in e-mail to compromise targeted systems.","[G0035] Dragonfly: Dragonfly has used various forms of spearphishing in attempts to get users to open malicious attachments.","[G0090] WIRTE: WIRTE has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.","[S0670] WarzoneRAT: WarzoneRAT has relied on a victim to open a malicious attachment within an email for execution.","[S0637] NativeZone: NativeZone can display an RTF document to the user to enable execution of Cobalt Strike stage shellcode.","[G0048] RTM: RTM has attempted to lure victims into opening e-mail attachments to execute malicious code.","[G1007] Aoqin Dragon: Aoqin Dragon has lured victims into opening weaponized documents, fake external drives, and fake antivirus to execute malicious payloads.","[S0331] Agent Tesla: Agent Tesla has been executed through malicious e-mail attachments","[S0499] Hancitor: Hancitor has used malicious Microsoft Word documents, sent via email, which prompted the victim to enable macros.","[S0428] PoetRAT: PoetRAT has used spearphishing attachments to infect victims.","[G0099] APT-C-36: APT-C-36 has prompted victims to accept macros in order to execute the subsequent payload.","[S0367] Emotet: Emotet has relied upon users clicking on a malicious attachment delivered through spearphishing.","[S0455] Metamorfo: Metamorfo requires the user to double-click the executable to run the malicious HTA file or to download a malicious installer.","[S1026] Mongall: Mongall has relied on a user opening a malicious document for execution.","[G1012] CURIUM: CURIUM has lured users into opening malicious files delivered via social media.","[G0084] Gallmaker: Gallmaker sent victims a lure document with a warning that asked victims to “enable content” for execution.","[G0081] Tropic Trooper: Tropic Trooper has lured victims into executing malware via malicious e-mail attachments.","[G0070] Dark Caracal: Dark Caracal makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.","[G1039] RedCurl: RedCurl has used malicious files to infect the victim machines.","[S0634] EnvyScout: EnvyScout has been executed through malicious files attached to e-mails.","[G0079] DarkHydrus: DarkHydrus has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.","[G0068] PLATINUM: PLATINUM has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.","[C0016] Operation Dust Storm: During Operation Dust Storm, the threat actors relied on potential victims to open a malicious Microsoft Word document sent via email.","[G0045] menuPass: menuPass has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns.","[G0127] TA551: TA551 has prompted users to enable macros within spearphishing attachments to install malware.","[G1001] HEXANE: HEXANE has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware.","[S0373] Astaroth: Astaroth has used malicious files including VBS, LNK, and HTML for execution.","[S0198] NETWIRE: NETWIRE has been executed through luring victims into opening malicious documents.","[G0061] FIN8: FIN8 has used malicious e-mail attachments to lure victims into executing malware.","[G0027] Threat Group-3390: Threat Group-3390 has lured victims into opening malicious files containing malware.","[S0665] ThreatNeedle: ThreatNeedle relies on a victim to click on a malicious document for initial execution.","[S0660] Clambling: Clambling has gained execution through luring victims into opening malicious files.","[S0650] QakBot: QakBot has gained execution through users opening malicious attachments.","[S1183] StrelaStealer: StrelaStealer relies on user execution of a malicious file for installation.","[C0001] Frankenstein: During Frankenstein, the threat actors relied on a victim to enable macros within a malicious Microsoft Word document likely sent via email.","[G1002] BITTER: BITTER has attempted to lure victims into opening malicious attachments delivered via spearphishing.","[G0137] Ferocious Kitten: Ferocious Kitten has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.","[G0067] APT37: APT37 has sent spearphishing attachments attempting to get a user to open them.","[C0005] Operation Spalax: During Operation Spalax, the threat actors relied on a victim to open a PDF document and click on an embedded malicious link to download malware.","[S1100] Ninja: Ninja has gained execution through victims opening malicious executable files embedded in zip archives.","[G0140] LazyScripter: LazyScripter has lured users to open malicious email attachments.","[G0056] PROMETHIUM: PROMETHIUM has attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.","[G0092] TA505: TA505 has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files.","[C0015] C0015: During C0015, the threat actors relied on users to enable macros within a malicious Microsoft Word document.","[S0635] BoomBox: BoomBox has gained execution through user interaction with a malicious file.","[G0087] APT39: APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.","[G1033] Star Blizzard: Star Blizzard has lured targets into opening malicious .pdf files to deliver malware.","[S1122] Mispadu: Mispadu has relied on users to execute malicious files in order to gain execution on victim machines.","[S1075] KOPILUWAK: KOPILUWAK has gained execution through malicious attachments.","[G0126] Higaisa: Higaisa used malicious e-mail attachments to lure victims into executing LNK files.","[G0075] Rancor: Rancor attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.","[S1142] LunarMail: LunarMail has been installed through a malicious macro in a Microsoft Word document.","[S0476] Valak: Valak has been executed via Microsoft Word documents containing malicious macros.","[G0102] Wizard Spider: Wizard Spider has lured victims to execute malware with spearphishing attachments containing macros to download either Emotet, Bokbot, TrickBot, or Bazar.","[S0531] Grandoreiro: Grandoreiro has infected victims via malicious attachments.","[S0402] OSX/Shlayer: OSX/Shlayer has relied on users mounting and executing a malicious DMG file.","[G0049] OilRig: OilRig has delivered macro-enabled documents that required targets to click the \"enable content\" button to execute the payload on the system.","[G0034] Sandworm Team: Sandworm Team has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.","[G0059] Magic Hound: Magic Hound has attempted to lure victims into opening malicious email attachments.","[S1014] DanBot: DanBot has relied on victims' opening a malicious file for initial execution.","[G0085] FIN4: FIN4 has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).","[G0080] Cobalt Group: Cobalt Group has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.","[S0390] SQLRat: SQLRat relies on users clicking on an embedded image to execute the scripts.","[S1018] Saint Bot: Saint Bot has relied on users to execute a malicious attachment delivered via spearphishing.","[S0496] REvil: REvil has been executed via malicious MS Word e-mail attachments.","[S0527] CSPY Downloader: CSPY Downloader has been delivered via malicious documents with embedded macros.","[S0526] KGH_SPY: KGH_SPY has been spread through Word documents containing malicious macros.","[S1086] Snip3: Snip3 can gain execution through the download of visual basic files.","[G1046] Storm-1811: Storm-1811 has prompted users to execute downloaded software and payloads as the result of social engineering activity.","[S0491] StrongPity: StrongPity has been executed via compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.","[S0266] TrickBot: TrickBot has attempted to get users to launch malicious documents to deliver its payload.","[S0263] TYPEFRAME: A Word document delivering TYPEFRAME prompts the user to enable macro execution.","[G0100] Inception: Inception lured victims into clicking malicious files for machine reconnaissance and to execute malware.","[G1011] EXOTIC LILY: EXOTIC LILY has gained execution through victims clicking on malicious LNK files contained within ISO files, which can execute hidden DLLs within the ISO.","[S1070] Black Basta: Black Basta has been downloaded and executed from malicious Excel files.","[G0130] Ajax Security Team: Ajax Security Team has lured victims into executing malicious files.","[S0348] Cardinal RAT: Cardinal RAT lures victims into executing malicious macros embedded within Microsoft Excel documents.","[S0483] IcedID: IcedID has been executed through Word and Excel files with malicious embedded macros and through ISO and LNK files that execute the malicious DLL.","[S0465] CARROTBALL: CARROTBALL has been executed through users being lured into opening malicious e-mail attachments.","[S0696] Flagpro: Flagpro has relied on users clicking a malicious attachment delivered through spearphishing.","[S1013] ZxxZ: ZxxZ has relied on victims to open a malicious attachment delivered via email.","[C0011] C0011: During C0011, Transparent Tribe relied on a student target to open a malicious document delivered via email.","[C0022] Operation Dream Job: During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained \"dream job\" descriptions from defense, aerospace, and other sectors.","[S1066] DarkTortilla: DarkTortilla has relied on a user to open a malicious document or archived file delivered via email for initial execution.","[S0435] PLEAD: PLEAD has been executed via malicious e-mail attachments.","[G1031] Saint Bear: Saint Bear relies on user interaction and execution of malicious attachments and similar for initial execution on victim systems.","[G0032] Lazarus Group: Lazarus Group has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.","[G0037] FIN6: FIN6 has used malicious documents to lure victims into allowing execution of PowerShell scripts.","[C0028] 2015 Ukraine Electric Power Attack: During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them.","[S1037] STARWHALE: STARWHALE has relied on victims opening a malicious Excel file for execution.","[S1169] Mango: Mango has been executed through a Microsoft Word document with a malicious macro.","[G0040] Patchwork: Patchwork embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.","[S0268] Bisonal: Bisonal has relied on users to execute malicious file attachments delivered via spearphishing emails.","[S0464] SYSCON: SYSCON has been executed by luring victims to open malicious e-mail attachments.","[G0107] Whitefly: Whitefly has used malicious .exe or .dll files disguised as documents or images.","[G0062] TA459: TA459 has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.","[G0046] FIN7: FIN7 lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.","[S0642] BADFLICK: BADFLICK has relied upon users clicking on a malicious attachment delivered through spearphishing.","[S1160] Latrodectus: Latrodectus has lured users into opening malicious email attachments for execution.","[G1036] Moonstone Sleet: Moonstone Sleet relied on users interacting with malicious files, such as a trojanized PuTTY installer, for initial execution.","[S0606] Bad Rabbit: Bad Rabbit has been executed through user installation of an executable disguised as a flash installer.","[G0133] Nomadic Octopus: Nomadic Octopus as attempted to lure victims into clicking on malicious attachments within spearphishing emails.","[S1021] DnsSystem: DnsSystem has lured victims into opening macro-enabled Word documents for execution.","[S0520] BLINDINGCAN: BLINDINGCAN has lured victims into executing malicious macros embedded within Microsoft Office documents.","[S1065] Woody RAT: Woody RAT has relied on users opening a malicious email attachment for execution.","[S0482] Bundlore: Bundlore has attempted to get users to execute a malicious .app file that looks like a Flash Player update.","[C0047] RedDelta Modified PlugX Infection Chain Operations: Mustang Panda distributed malicious LNK objects for user execution during RedDelta Modified PlugX Infection Chain Operations.","[S1017] OutSteel: OutSteel has relied on a user to execute a malicious attachment delivered via spearphishing.","[G0007] APT28: APT28 attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.","[S0389] JCry: JCry has achieved execution by luring users to click on a file that appeared to be an Adobe Flash Player update installer.","[G0078] Gorgon Group: Gorgon Group attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.","[G0073] APT19: APT19 attempted to get users to launch malicious attachments delivered via spearphishing emails.","[G1018] TA2541: TA2541 has used macro-enabled MS Word documents to lure victims into executing malicious payloads.","[S1030] Squirrelwaffle: Squirrelwaffle has relied on users enabling malicious macros within Microsoft Excel and Word attachments.","[S1111] DarkGate: DarkGate initial infection payloads can masquerade as pirated media content requiring user interaction for code execution. DarkGate is distributed through phishing links to VBS or MSI objects requiring user interaction for execution.","[S0234] Bandook: Bandook has used lure documents to convince the user to enable macros.","[G1006] Earth Lusca: Earth Lusca required users to click on a malicious file for the loader to activate.","[S0433] Rifdoor: Rifdoor has been executed from malicious Excel or Word documents containing macros.","[G1008] SideCopy: SideCopy has attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.","[G0103] Mofang: Mofang's malicious spearphishing attachments required a user to open the file after receiving.","[G0065] Leviathan: Leviathan has sent spearphishing attachments attempting to get a user to click.","[G0131] Tonto Team: Tonto Team has relied on user interaction to open their malicious RTF documents.","[C0006] Operation Honeybee: During Operation Honeybee, threat actors relied on a victim to enable macros within a malicious Word document.","[G0013] APT30: APT30 has relied on users to execute malicious file attachments delivered via spearphishing emails.","[S1213] Lumma Stealer: Lumma Stealer has gained initial execution through victims opening malicious executable files embedded in zip archives, and MSI files within RAR files.","[G0138] Andariel: Andariel has attempted to lure victims into enabling malicious macros within email attachments.","[G0060] BRONZE BUTLER: BRONZE BUTLER has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.","[G0082] APT38: APT38 has attempted to lure victims into enabling malicious macros within email attachments. Additionally, APT38 has used malicious Word documents and shortcut files.","[S0528] Javali: Javali has achieved execution through victims opening malicious attachments, including MSI files with embedded VBScript.","[G0069] MuddyWater: MuddyWater has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.","[S1039] Bumblebee: Bumblebee has relied upon a user opening an ISO file to enable execution of malicious shortcut files and DLLs.","[G0019] Naikon: Naikon has convinced victims to open malicious attachments to execute malware.","[S0622] AppleSeed: AppleSeed can achieve execution through users running malicious file attachments distributed via email.","[S0458] Ramsay: Ramsay has been executed through malicious e-mail attachments.","[S0240] ROKRAT: ROKRAT has relied upon users clicking on a malicious attachment delivered through spearphishing.","[C0013] Operation Sharpshooter: During Operation Sharpshooter, the threat actors relied on victims executing malicious Microsoft Word or PDF files.","[S1088] Disco: Disco has been executed through inducing user interaction with malicious .zip and .msi files.","[S0447] Lokibot: Lokibot has tricked recipients into enabling malicious macros by getting victims to click \"enable content\" in email attachments.","[S1042] SUGARDUMP: Some SUGARDUMP variants required a user to enable a macro within a malicious .xls file for execution.","[S0011] Taidoor: Taidoor has relied upon a victim to click on a malicious email attachment.","[S0584] AppleJeus: AppleJeus has required user execution of a malicious MSI installer.","[S0260] InvisiMole: InvisiMole can deliver trojanized versions of software and documents, relying on user execution.","[S0148] RTM: RTM has relied on users opening malicious email attachments, decompressing the attached archive, and double-clicking the executable within.","[G0129] Mustang Panda: Mustang Panda has sent malicious files requiring direct victim interaction to execute.","[S0340] Octopus: Octopus has relied upon users clicking on a malicious attachment delivered through spearphishing.","[G0021] Molerats: Molerats has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.","[S0585] Kerrdown: Kerrdown has gained execution through victims opening malicious files.","[G0018] admin@338: admin@338 has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.","[G0047] Gamaredon Group: Gamaredon Group has attempted to get users to click on Office attachments with malicious macros embedded.","[S0384] Dridex: Dridex has relied upon users clicking on a malicious attachment delivered through spearphishing.","[G0012] Darkhotel: Darkhotel has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.","[G0050] APT32: APT32 has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.","[G0089] The White Company: The White Company has used phishing lure documents that trick users into opening them and infecting their computers.","[G0136] IndigoZebra: IndigoZebra sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.","[G0064] APT33: APT33 has used malicious e-mail attachments to lure victims into executing malware.","[G0091] Silence: Silence attempts to get users to launch malicious attachments delivered via spearphishing emails.","[G0121] Sidewinder: Sidewinder has lured targets to click on malicious files to gain execution in the target environment.","[G0119] Indrik Spider: Indrik Spider has attempted to get users to click on a malicious zipped file.","[G0016] APT29: APT29 has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files.","[G0142] Confucius: Confucius has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.","[S1027] Heyoka Backdoor: Heyoka Backdoor has been spread through malicious document lures.","[G0098] BlackTech: BlackTech has used e-mails with malicious documents to lure victims into installing malware.","[G0112] Windshift: Windshift has used e-mail attachments to lure victims into executing malicious code.","[S0561] GuLoader: The GuLoader executable has been retrieved via embedded macros in malicious Word documents.","[S0648] JSS Loader: JSS Loader has been executed through malicious attachments contained in spearphishing emails.","[S1063] Brute Ratel C4: Brute Ratel C4 has gained execution through users opening malicious documents."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1204.003","technique_name":"User Execution: Malicious Image","description":"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container. Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: Match Legitimate Resource Name or Location).","detection":"Monitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.","procedures":["[G0139] TeamTNT: TeamTNT has relied on users to download and execute malicious Docker images."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1204.004","technique_name":"User Execution: Malicious Copy and Paste","description":"An adversary may rely upon a user copying and pasting code in order to gain execution. Users may be subjected to social engineering to get them to copy and paste code directly into a Command and Scripting Interpreter. Malicious websites, such as those used in Drive-by Compromise, may present fake error messages or CAPTCHA prompts that instruct users to open a terminal or the Windows Run Dialog box and execute an arbitrary command. These commands may be obfuscated using encoding or other techniques to conceal malicious intent. Once executed, the adversary will typically be able to establish a foothold on the victim's machine. Adversaries may also leverage phishing emails for this purpose. When a user attempts to open an attachment, they may be presented with a fake error and offered a malicious command to paste as a solution. Tricking a user into executing a command themselves may help to bypass email filtering, browser sandboxing, or other mitigations designed to protect users against malicious downloaded files.","detection":null,"procedures":null,"tactics":"TA0002 - Execution"}
{"technique_id":"T1559.001","technique_name":"Inter-Process Communication: Component Object Model","description":"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as Distributed Component Object Model (DCOM). Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic. Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.","detection":"Monitor for COM objects loading DLLs and other modules not typically associated with the application. Enumeration of COM objects, via Query Registry or PowerShell, may also proceed malicious use. Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.","procedures":["[S0223] POWERSTATS: POWERSTATS can use DCOM (targeting the 127.0.0.1 loopback address) to execute additional payloads on compromised hosts.","[S0266] TrickBot: TrickBot used COM to setup scheduled task for persistence.","[S0260] InvisiMole: InvisiMole can use the ITaskService, ITaskDefinition and ITaskSettings COM interfaces to schedule a task.","[S1044] FunnyDream: FunnyDream can use com objects identified with `CLSID_ShellLink`(`IShellLink` and `IPersistFile`) and `WScript.Shell`(`RegWrite` method) to enable persistence mechanisms.","[G0069] MuddyWater: MuddyWater has used malware that has the capability to execute malicious code via COM, DCOM, and Outlook.","[S0386] Ursnif: Ursnif droppers have used COM objects to execute the malware's full executable payload.","[S1015] Milan: Milan can use a COM component to generate scheduled tasks.","[S1160] Latrodectus: Latrodectus can use the Windows Component Object Model (COM) to set scheduled tasks.","[G0047] Gamaredon Group: Gamaredon Group malware can insert malicious macros into documents using a Microsoft.Office.Interop object.","[S1130] Raspberry Robin: Raspberry Robin creates an elevated COM object for CMLuaUtil and uses this to set a registry value that points to the malicious LNK file during execution.","[S0698] HermeticWizard: HermeticWizard can execute files on remote machines using DCOM.","[S1066] DarkTortilla: DarkTortilla has used the `WshShortcut` COM object to create a .lnk shortcut file in the Windows startup folder.","[S0691] Neoichor: Neoichor can use the Internet Explorer (IE) COM interface to connect and receive commands from C2.","[S0692] SILENTTRINITY: SILENTTRINITY can insert malicious shellcode into Excel.exe using a `Microsoft.Office.Interop` object.","[S1039] Bumblebee: Bumblebee can use a COM object to execute queries to gather system information.","[S0458] Ramsay: Ramsay can use the Windows COM API to schedule tasks and maintain persistence.","[S0666] Gelsemium: Gelsemium can use the `IARPUinstallerStringLauncher` COM interface are part of its UAC bypass process."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1559.002","technique_name":"Inter-Process Communication: Dynamic Data Exchange","description":"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution. Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by Component Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via Phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program. DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a Command and Scripting Interpreter. DDE execution can be invoked remotely via Remote Services such as Distributed Component Object Model (DCOM).","detection":"Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe). OLE, Office Open XML, CSV, and other files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.","procedures":["[S0458] Ramsay: Ramsay has been delivered using OLE objects in malicious documents.","[C0013] Operation Sharpshooter: During Operation Sharpshooter, threat actors sent malicious Word OLE documents to victims.","[S0391] HAWKBALL: HAWKBALL has used an OLE object that uses Equation Editor to drop the embedded shellcode.","[G0080] Cobalt Group: Cobalt Group has sent malicious Word OLE compound documents to victims.","[G0046] FIN7: FIN7 spear phishing campaigns have included malicious Word documents with DDE execution.","[G0069] MuddyWater: MuddyWater has used malware that can execute PowerShell scripts via DDE.","[G0121] Sidewinder: Sidewinder has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer.","[S0148] RTM: RTM can search for specific strings within browser tabs using a Dynamic Data Exchange mechanism.","[G0007] APT28: APT28 has delivered JHUHUGIT and Koadic by executing PowerShell commands through DDE in Word documents.","[S0476] Valak: Valak can execute tasks via OLE.","[S0428] PoetRAT: PoetRAT was delivered with documents using DDE to execute malicious code.","[G0067] APT37: APT37 has used Windows DDE for execution of commands and a malicious VBS.","[S0223] POWERSTATS: POWERSTATS can use DDE to execute additional payloads on compromised hosts.","[G0084] Gallmaker: Gallmaker attempted to exploit Microsoft’s DDE protocol in order to gain access to victim machines and for execution.","[G0065] Leviathan: Leviathan has utilized OLE as a method to insert malicious content inside various phishing documents.","[G1002] BITTER: BITTER has executed OLE objects using Microsoft Equation Editor to download and run malicious payloads.","[S0387] KeyBoy: KeyBoy uses the Dynamic Data Exchange (DDE) protocol to download remote payloads.","[S0237] GravityRAT: GravityRAT has been delivered via Word documents using DDE for execution.","[G0092] TA505: TA505 has leveraged malicious Word documents that abused DDE.","[G0040] Patchwork: Patchwork leveraged the DDE protocol to deliver their malware."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1559.003","technique_name":"Inter-Process Communication: XPC Services","description":"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service C API or the high level NSXPCConnection API in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon. Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler. This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct Exploitation for Privilege Escalation.","detection":null,"procedures":null,"tactics":"TA0002 - Execution"}
{"technique_id":"T1569.001","technique_name":"System Services: Launchctl","description":"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input. Adversaries use launchctl to execute commands and programs as Launch Agents or Launch Daemons. Common subcommands include: launchctl load,launchctl unload, and launchctl start. Adversaries can use scripts or manually run the commands launchctl load -w \"%s/Library/LaunchAgents/%s\" or /bin/launchctl load to execute Launch Agents or Launch Daemons.","detection":"Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line launchctl command. Plist files are located in the root, system, and users /Library/LaunchAgents or /Library/LaunchDaemons folders. Monitor command-line execution of the launchctl command immediately followed by abnormal network connections. Launch Agents or Launch Daemons with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious. When removing Launch Agents or Launch Daemons ensure the services are unloaded prior to deleting plist files.","procedures":["[S0451] LoudMiner: LoudMiner launched the QEMU services in the /Library/LaunchDaemons/ folder using launchctl. It also uses launchctl to unload all Launch Daemons when updating to a newer version of LoudMiner.","[S1153] Cuckoo Stealer: Cuckoo Stealer can use `launchctl` to load a LaunchAgent for persistence.","[S0584] AppleJeus: AppleJeus has loaded a plist file using the launchctl command.","[S1048] macOS.OSAMiner: macOS.OSAMiner has used `launchctl` to restart the Launch Agent.","[S0658] XCSSET: XCSSET loads a system level launchdaemon using the launchctl load -w command from /System/Librarby/LaunchDaemons/ssh.plist.","[S0274] Calisto: Calisto uses launchctl to enable screen sharing on the victim’s machine."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1569.002","technique_name":"System Services: Service Execution","description":"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net. PsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution. Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.","detection":"Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool PsExec.","procedures":["[S0192] Pupy: Pupy uses PsExec to execute a payload or commands on a remote host.","[S1111] DarkGate: DarkGate tries to elevate privileges to SYSTEM using PsExec to locally execute as a service, such as cmd /c c:\\temp\\PsExec.exe -accepteula -j -d -s [Target Binary].","[S0154] Cobalt Strike: Cobalt Strike can use PsExec to execute a payload on a remote host. It can also use Service Control Manager to start new services.","[S0260] InvisiMole: InvisiMole has used Windows services as a way to execute its malicious payload.","[S0203] Hydraq: Hydraq uses svchost.exe to execute a malicious DLL included in a new service group.","[S1063] Brute Ratel C4: Brute Ratel C4 can create Windows system services for execution.","[S0368] NotPetya: NotPetya can use PsExec to help propagate itself across a network.","[G0114] Chimera: Chimera has used PsExec to deploy beacons on compromised systems.","[S0166] RemoteCMD: RemoteCMD can execute commands remotely by creating a new service on the remote system.","[S0698] HermeticWizard: HermeticWizard can use `OpenRemoteServiceManager` to create a service.","[S0668] TinyTurla: TinyTurla can install itself as a service on compromised machines.","[S0606] Bad Rabbit: Bad Rabbit drops a file named infpub.datinto the Windows directory and is executed through SCManager and rundll.exe.","[S0481] Ragnar Locker: Ragnar Locker has used sc.exe to execute a service that it creates.","[G0087] APT39: APT39 has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.","[S0378] PoshC2: PoshC2 contains an implementation of PsExec for remote execution.","[S1060] Mafalda: Mafalda can create a remote service, let it run once, and then delete it.","[S1202] LockBit 3.0: LockBit 3.0 can use PsExec to execute commands and payloads.","[S0123] xCmd: xCmd can be used to execute binaries on remote systems by creating and starting a service.","[C0014] Operation Wocao: During Operation Wocao, threat actors created services on remote systems for execution purposes.","[S0191] Winexe: Winexe installs a service on the remote system, executes the command, then uninstalls the service.","[S0127] BBSRAT: BBSRAT can start, stop, or delete services.","[S0660] Clambling: Clambling can create and start services on a compromised host.","[S0238] Proxysvc: Proxysvc registers itself as a service on the victim’s machine to run as a standalone process.","[S0039] Net: The net start and net stop commands can be used in Net to execute or stop Windows services.","[S0533] SLOTHFULMEDIA: SLOTHFULMEDIA has the capability to start services.","[S0032] gh0st RAT: gh0st RAT can execute its service if the Service key exists. If the key does not exist, gh0st RAT will create and run the service.","[G1032] INC Ransom: INC Ransom has run a file encryption executable via `Service Control Manager/7045;winupd,%SystemRoot%\\winupd.exe,user mode service,demand start,LocalSystem`.","[G1047] Velvet Ant: Velvet Ant executed and installed PlugX as a Windows service.","[S0357] Impacket: Impacket contains various modules emulating other service execution tools such as PsExec.","[S0398] HyperBro: HyperBro has the ability to start and stop a specified service.","[S0140] Shamoon: Shamoon creates a new service named “ntssrv” to execute the payload. Shamoon can also spread via PsExec.","[S0363] Empire: Empire can use PsExec to execute a payload on a remote host.","[S0439] Okrum: Okrum's loader can create a new service named NtmsSvc to execute the payload.","[G0096] APT41: APT41 used svchost.exe and Net to execute a system service installed to launch a Cobalt Strike BEACON loader.","[G0091] Silence: Silence has used Winexe to install a service on the remote system.","[G0004] Ke3chang: Ke3chang has used a tool known as RemoteExec (similar to PsExec) to remotely execute batch scripts and binaries.","[G0108] Blue Mockingbird: Blue Mockingbird has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the \"wercplsupport\" service.","[S0376] HOPLIGHT: HOPLIGHT has used svchost.exe to execute a malicious DLL .","[S0689] WhisperGate: WhisperGate can download and execute AdvancedRun.exe via `sc.exe`.","[S0176] Wingbird: Wingbird uses services.exe to register a new autostart service named \"Audit Service\" using a copy of the local lsass.exe file.","[S1134] DEADWOOD: DEADWOOD can be executed as a service using various names, such as ScDeviceEnums.","[S0056] Net Crawler: Net Crawler uses PsExec to perform remote service manipulation to execute a copy of itself as part of lateral movement.","[S0451] LoudMiner: LoudMiner started the cryptomining virtual machine as a service on the infected machine.","[S0583] Pysa: Pysa has used PsExec to copy and execute the ransomware.","[C0006] Operation Honeybee: During Operation Honeybee, threat actors ran sc start to start the COMSysApp as part of the service hijacking and sc stop to stop and reconfigure the COMSysApp.","[S0141] Winnti for Windows: Winnti for Windows can run as a service using svchost.exe.","[G0050] APT32: APT32's backdoor has used Windows services as a way to execute its malicious payload.","[S0664] Pandora: Pandora has the ability to install itself as a Windows service.","[S0029] PsExec: Microsoft Sysinternals PsExec is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.","[G1043] BlackByte: BlackByte created malicious services for ransomware execution.","[S0250] Koadic: Koadic can run a command on another machine using PsExec.","[G0037] FIN6: FIN6 has created Windows services to execute encoded PowerShell commands.","[S0438] Attor: Attor's dispatcher can be executed as a service.","[S1132] IPsec Helper: IPsec Helper is run as a Windows service in victim environments.","[C0040] APT41 DUST: APT41 DUST used Windows services to execute DUSTPAN.","[S0365] Olympic Destroyer: Olympic Destroyer utilizes PsExec to help propagate itself across a network.","[S0612] WastedLocker: WastedLocker can execute itself as a service.","[G1036] Moonstone Sleet: Moonstone Sleet used intermediate loader malware such as YouieLoader and SplitLoader that create malicious services.","[S1181] BlackByte 2.0 Ransomware: BlackByte 2.0 Ransomware executes as a service when deployed.","[S0697] HermeticWiper: HermeticWiper can create system services to aid in executing the payload.","[S0457] Netwalker: Operators deploying Netwalker have used psexec and certutil to retrieve the Netwalker payload.","[S0491] StrongPity: StrongPity can install a service to execute itself as a service.","[S0663] SysUpdate: SysUpdate can manage services and processes.","[S0412] ZxShell: ZxShell can create a new service for execution.","[G0082] APT38: APT38 has created new services or modified existing ones to run executables, commands, or scripts.","[G0102] Wizard Spider: Wizard Spider has used `services.exe` to execute scripts and executables during lateral movement within a victim's network. Wizard Spider has also used batch scripts that leverage PsExec to execute a previously transferred ransomware payload on a victim's network.","[S0504] Anchor: Anchor can create and execute services to load its payload."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1569.003","technique_name":"System Services: Systemctl","description":"Adversaries may abuse systemctl to execute commands or programs. Systemctl is the primary interface for systemd, the Linux init system and service manager. Typically invoked from a shell, Systemctl can also be integrated into scripts or applications. Adversaries may use systemctl to execute commands or programs as Systemd Services. Common subcommands include: `systemctl start`, `systemctl stop`, `systemctl enable`, `systemctl disable`, and `systemctl status`.","detection":null,"procedures":["[G0139] TeamTNT: TeamTNT has created system services to execute cryptocurrency mining software."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1609","technique_name":"Container Administration Command","description":"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment. In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as docker exec to execute a command within a running container. In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as kubectl exec.","detection":"Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container and the underlying host. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.","procedures":["[G0139] TeamTNT: TeamTNT executed Hildegard through the kubelet API run command and by executing commands on running containers.","[S0683] Peirates: Peirates can use `kubectl` or the Kubernetes API to run commands.","[S0601] Hildegard: Hildegard was executed through the kubelet API run command and by executing commands on running containers.","[S0623] Siloscape: Siloscape can send kubectl commands to victim clusters through an IRC channel and can run kubectl locally to spread once within a victim cluster.","[S0599] Kinsing: Kinsing was executed with an Ubuntu container entry point that runs shell scripts."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1610","technique_name":"Deploy Container","description":"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to Escape to Host and access other containers running on the node. Containers can be deployed by various means, such as via Docker's create and start APIs or via a web application such as the Kubernetes dashboard or Kubeflow. In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes. Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.","detection":"Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.","procedures":["[S0599] Kinsing: Kinsing was run through a deployed Ubuntu container.","[G0139] TeamTNT: TeamTNT has deployed different types of containers into victim environments to facilitate execution. TeamTNT has also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges.","[S0683] Peirates: Peirates can deploy a pod that mounts its node’s root file system, then execute a command to create a reverse shell on the node.","[S0600] Doki: Doki was run through a deployed container."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1648","technique_name":"Serverless Execution","description":"Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. Adversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. Resource Hijacking). Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add Additional Cloud Roles to a serverless cloud function, which may then be able to perform actions the original user cannot. Serverless functions can also be invoked in response to cloud events (i.e. Event Triggered Execution), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds Additional Cloud Credentials to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created. This is also possible in many cloud-based office application suites. For example, in Microsoft 365 environments, an adversary may create a Power Automate workflow that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint. In Google Workspace environments, they may instead create an Apps Script that exfiltrates a user's data when they open a file.","detection":null,"procedures":["[S1091] Pacu: Pacu can create malicious Lambda functions."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1651","technique_name":"Cloud Administration Command","description":"Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. If an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment’s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a Trusted Relationship to execute commands in connected virtual machines.","detection":null,"procedures":["[G0016] APT29: APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.","[S0677] AADInternals: AADInternals can execute commands on Azure virtual machines using the VM agent.","[S1091] Pacu: Pacu can run commands on EC2 instances using AWS Systems Manager Run Command."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1674","technique_name":"Input Injection","description":"Adversaries may simulate keystrokes on a victim’s computer by various means to perform any type of action on behalf of the user, such as launching the command interpreter using keyboard shortcuts, typing an inline script to be executed, or interacting directly with a GUI-based application. These actions can be preprogrammed into adversary tooling or executed through physical devices such as Human Interface Devices (HIDs). For example, adversaries have used tooling that monitors the Windows message loop to detect when a user visits bank-specific URLs. If detected, the tool then simulates keystrokes to open the developer console or select the address bar, pastes malicious JavaScript from the clipboard, and executes it - enabling manipulation of content within the browser, such as replacing bank account numbers during transactions. Adversaries have also used malicious USB devices to emulate keystrokes that launch PowerShell, leading to the download and execution of malware from adversary-controlled servers.","detection":null,"procedures":["[G0046] FIN7: FIN7 has used malicious USBs to emulate keystrokes to launch PowerShell to download and execute malware from the adversary's server."],"tactics":"TA0002 - Execution"}
{"technique_id":"T1675","technique_name":"ESXi Administration Command","description":"Adversaries may abuse ESXi administration services to execute commands on guest machines hosted within an ESXi virtual environment. Persistent background services on ESXi-hosted VMs, such as the VMware Tools Daemon Service, allow for remote management from the ESXi server. The tools daemon service runs as `vmtoolsd.exe` on Windows guest operating systems, `vmware-tools-daemon` on macOS, and `vmtoolsd ` on Linux. Adversaries may leverage a variety of tools to execute commands on ESXi-hosted VMs – for example, by using the vSphere Web Services SDK to programmatically execute commands and scripts via APIs such as `StartProgramInGuest`, `ListProcessesInGuest`, `ListFileInGuest`, and `InitiateFileTransferFromGuest`. This may enable follow-on behaviors on the guest VMs, such as File and Directory Discovery, Data from Local System, or OS Credential Dumping.","detection":null,"procedures":null,"tactics":"TA0002 - Execution"}